{
  "contractName": "Stackeable",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor,since this contract is not ment to be used without inheritance push once to stakeholders for it to work proplerly\"}},\"notice\":\"Stakeable is a contract who is ment to be inherited by other contract that wants Staking capabilities\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/stackable.sol\":\"Stackeable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/stackable.sol\":{\"keccak256\":\"0x4e7871885a254f143ce70941b90ab6dd4b55019e29c0a74528b9a463288c3975\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9187c4cd646dfe3f4964a1b718490f0377706135efd5a4066045d93eecb553e8\",\"dweb:/ipfs/QmVJoeyTjqnbKEsMFvoMtpQVV98B4VjLwT75Rit9msmAbX\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50603f80601d6000396000f3fe6080604052600080fdfea264697066735822122044547a814b7134409b33b2bb429fe5e99df0c1d4a11a907a87b66fe921a7520e64736f6c63430008120033",
  "deployedBytecode": "0x6080604052600080fdfea264697066735822122044547a814b7134409b33b2bb429fe5e99df0c1d4a11a907a87b66fe921a7520e64736f6c63430008120033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "208:220:5:-:0;;;396:30;;;;;;;;;;208:220;;;;;;",
  "deployedSourceMap": "208:220:5:-:0;;;;;",
  "source": "// SPDX-License-Identifier: MIT\n// contracts/token.sol\n\npragma solidity >=0.8.0 <0.9.0;\n\n/**\n* @notice Stakeable is a contract who is ment to be inherited by other contract that wants Staking capabilities\n*/\ncontract Stackeable {\n\n    /**\n    * @notice Constructor,since this contract is not ment to be used without inheritance\n    * push once to stakeholders for it to work proplerly\n    */\n    constructor() {\n        \n    }\n}",
  "sourcePath": "/Users/gabrielknies/Desktop/Epitech/EIP/coin/contracts/stackable.sol",
  "ast": {
    "absolutePath": "project:/contracts/stackable.sol",
    "exportedSymbols": {
      "Stackeable": [
        129
      ]
    },
    "id": 130,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 122,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:31:5"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Stackeable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 123,
          "nodeType": "StructuredDocumentation",
          "src": "89:118:5",
          "text": " @notice Stakeable is a contract who is ment to be inherited by other contract that wants Staking capabilities"
        },
        "fullyImplemented": true,
        "id": 129,
        "linearizedBaseContracts": [
          129
        ],
        "name": "Stackeable",
        "nameLocation": "217:10:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 127,
              "nodeType": "Block",
              "src": "410:16:5",
              "statements": []
            },
            "documentation": {
              "id": 124,
              "nodeType": "StructuredDocumentation",
              "src": "235:156:5",
              "text": " @notice Constructor,since this contract is not ment to be used without inheritance\n push once to stakeholders for it to work proplerly"
            },
            "id": 128,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "407:2:5"
            },
            "returnParameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "410:0:5"
            },
            "scope": 129,
            "src": "396:30:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 130,
        "src": "208:220:5",
        "usedErrors": []
      }
    ],
    "src": "56:372:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.18+commit.87f61d96.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.11",
  "updatedAt": "2023-02-17T15:49:25.106Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Constructor,since this contract is not ment to be used without inheritance push once to stakeholders for it to work proplerly"
      }
    },
    "notice": "Stakeable is a contract who is ment to be inherited by other contract that wants Staking capabilities",
    "version": 1
  }
}