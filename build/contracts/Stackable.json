{
  "contractName": "Stackable",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Staked",
      "type": "event"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"Staked(address,uint256,uint256,uint256)\":{\"notice\":\"Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor,since this contract is not ment to be used without inheritance push once to stakeholders for it to work proplerly\"}},\"notice\":\"Stakeable is a contract who is ment to be inherited by other contract that wants Staking capabilities\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/stackable.sol\":\"Stackable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/stackable.sol\":{\"keccak256\":\"0xb29a568bc0331492f7df057ffb456ee9be084135eba3d2dadef617eb0bd52579\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://749a2ff49fad24e4784d25ace5f0948f86b1604859454dbbfd942eccf8c9fb93\",\"dweb:/ipfs/QmdTw9fDSV3zfvxbecka74rScSoonreK4qrxRKpt3Mb5jw\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50600060018160018154018082558091505003906000526020600020905050603f80603b6000396000f3fe6080604052600080fdfea2646970667358221220397f1c785a44111a43f2b78173049d5e4a98b21a94b08d6f7084ff5923234d7664736f6c63430008120033",
  "deployedBytecode": "0x6080604052600080fdfea2646970667358221220397f1c785a44111a43f2b78173049d5e4a98b21a94b08d6f7084ff5923234d7664736f6c63430008120033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "208:2806:5:-:0;;;395:126;;;;;;;;;;494:12;:19;;;;;;;;;;;;;;;;;;;;;;;208:2806;;;;;;",
  "deployedSourceMap": "208:2806:5:-:0;;;;;",
  "source": "// SPDX-License-Identifier: MIT\n// contracts/token.sol\n\npragma solidity >=0.8.0 <0.9.0;\n\n/**\n* @notice Stakeable is a contract who is ment to be inherited by other contract that wants Staking capabilities\n*/\ncontract Stackable {\n\n    /**\n    * @notice Constructor,since this contract is not ment to be used without inheritance\n    * push once to stakeholders for it to work proplerly\n    */\n    constructor() {\n        // this push is needed so we avoid index 0 causing bug of index -1\n        stakeholders.push();\n\n    }\n    /**\n    * @notice\n    * A stake struct is used to represent the way we store stakes, \n    * A Stake will contain the users address, the amount staked and a timestamp, \n    * Since which is when the stake was made\n    */\n    struct Stake{\n        address user;\n        uint256 amount;\n        uint256 since;\n    }\n    /**\n    * @notice Stakeholder is a staker that has active stakes\n    */\n    struct Stakeholder{\n        address user;\n        Stake[] address_stakes;\n    }\n\n    /**\n    * @notice \n    *   This is a array where we store all Stakes that are performed on the Contract\n    *   The stakes for each address are stored at a certain index, the index can be found using the stakes mapping\n    */\n    Stakeholder[] internal stakeholders;\n    /**\n    * @notice \n    * stakes is used to keep track of the INDEX for the stakers in the stakes array\n    */\n    mapping(address => uint256) internal stakes;\n    /**\n    * @notice Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable\n    */\n    event Staked(address indexed user, uint256 amount, uint256 index, uint256 timestamp);\n\n    /**\n    * @notice _addStakeholder takes care of adding a new stakeholder to the stakeholders array\n    */\n    function _addStakeholder(address stacker) internal returns (uint256) {\n        // push an empty Stakeholder struct to the stakeholders array\n        stakeholders.push();\n        // calculate the index of the last item in the array by subtracting 1 from the length\n        uint256 userIndex = stakeholders.length - 1;\n        // set the address to the new index\n        stakeholders[userIndex].user = stacker;\n        // add index to the stackeholders\n        stakes[stacker] = userIndex;\n\n        return userIndex;\n    }\n\n    /**\n    * @notice\n    * _Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container\n    * StakeID \n    */\n    function _stake(uint256 _amount) internal {\n        // check if the amount is greater than 0\n        require(_amount > 0, \"Stakeable: Amount must be greater than 0\");\n\n        uint256 userIndex = stakes[msg.sender];\n        uint256 timestamp = block.timestamp;\n\n        if (userIndex == 0) {\n            userIndex = _addStakeholder(msg.sender);\n        }\n\n        stakeholders[userIndex].address_stakes.push(Stake(msg.sender, _amount, timestamp));\n\n        emit Staked(msg.sender, _amount, userIndex, timestamp);\n    }\n}",
  "sourcePath": "/Users/gabrielknies/Desktop/Epitech/EIP/coin/contracts/stackable.sol",
  "ast": {
    "absolutePath": "project:/contracts/stackable.sol",
    "exportedSymbols": {
      "Stackable": [
        264
      ]
    },
    "id": 265,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 122,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:31:5"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Stackable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 123,
          "nodeType": "StructuredDocumentation",
          "src": "89:118:5",
          "text": " @notice Stakeable is a contract who is ment to be inherited by other contract that wants Staking capabilities"
        },
        "fullyImplemented": true,
        "id": 264,
        "linearizedBaseContracts": [
          264
        ],
        "name": "Stackable",
        "nameLocation": "217:9:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 132,
              "nodeType": "Block",
              "src": "409:112:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 127,
                        "name": "stakeholders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 152,
                        "src": "494:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Stakeholder_$147_storage_$dyn_storage",
                          "typeString": "struct Stackable.Stakeholder storage ref[] storage ref"
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "507:4:5",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "494:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Stakeholder_$147_storage_$dyn_storage_ptr_$returns$_t_struct$_Stakeholder_$147_storage_$attached_to$_t_array$_t_struct$_Stakeholder_$147_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Stackable.Stakeholder storage ref[] storage pointer) returns (struct Stackable.Stakeholder storage ref)"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "494:19:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stakeholder_$147_storage",
                      "typeString": "struct Stackable.Stakeholder storage ref"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "494:19:5"
                }
              ]
            },
            "documentation": {
              "id": 124,
              "nodeType": "StructuredDocumentation",
              "src": "234:156:5",
              "text": " @notice Constructor,since this contract is not ment to be used without inheritance\n push once to stakeholders for it to work proplerly"
            },
            "id": 133,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "406:2:5"
            },
            "returnParameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "409:0:5"
            },
            "scope": 264,
            "src": "395:126:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "canonicalName": "Stackable.Stake",
            "id": 140,
            "members": [
              {
                "constant": false,
                "id": 135,
                "mutability": "mutable",
                "name": "user",
                "nameLocation": "780:4:5",
                "nodeType": "VariableDeclaration",
                "scope": 140,
                "src": "772:12:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 134,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "772:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 137,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "802:6:5",
                "nodeType": "VariableDeclaration",
                "scope": 140,
                "src": "794:14:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 136,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "794:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 139,
                "mutability": "mutable",
                "name": "since",
                "nameLocation": "826:5:5",
                "nodeType": "VariableDeclaration",
                "scope": 140,
                "src": "818:13:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 138,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "818:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Stake",
            "nameLocation": "757:5:5",
            "nodeType": "StructDefinition",
            "scope": 264,
            "src": "750:88:5",
            "visibility": "public"
          },
          {
            "canonicalName": "Stackable.Stakeholder",
            "id": 147,
            "members": [
              {
                "constant": false,
                "id": 142,
                "mutability": "mutable",
                "name": "user",
                "nameLocation": "955:4:5",
                "nodeType": "VariableDeclaration",
                "scope": 147,
                "src": "947:12:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 141,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "947:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 146,
                "mutability": "mutable",
                "name": "address_stakes",
                "nameLocation": "977:14:5",
                "nodeType": "VariableDeclaration",
                "scope": 147,
                "src": "969:22:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Stake_$140_storage_$dyn_storage_ptr",
                  "typeString": "struct Stackable.Stake[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 144,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 143,
                      "name": "Stake",
                      "nameLocations": [
                        "969:5:5"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 140,
                      "src": "969:5:5"
                    },
                    "referencedDeclaration": 140,
                    "src": "969:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$140_storage_ptr",
                      "typeString": "struct Stackable.Stake"
                    }
                  },
                  "id": 145,
                  "nodeType": "ArrayTypeName",
                  "src": "969:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Stake_$140_storage_$dyn_storage_ptr",
                    "typeString": "struct Stackable.Stake[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Stakeholder",
            "nameLocation": "926:11:5",
            "nodeType": "StructDefinition",
            "scope": 264,
            "src": "919:79:5",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 148,
              "nodeType": "StructuredDocumentation",
              "src": "1004:225:5",
              "text": " @notice \n   This is a array where we store all Stakes that are performed on the Contract\n   The stakes for each address are stored at a certain index, the index can be found using the stakes mapping"
            },
            "id": 152,
            "mutability": "mutable",
            "name": "stakeholders",
            "nameLocation": "1257:12:5",
            "nodeType": "VariableDeclaration",
            "scope": 264,
            "src": "1234:35:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Stakeholder_$147_storage_$dyn_storage",
              "typeString": "struct Stackable.Stakeholder[]"
            },
            "typeName": {
              "baseType": {
                "id": 150,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 149,
                  "name": "Stakeholder",
                  "nameLocations": [
                    "1234:11:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 147,
                  "src": "1234:11:5"
                },
                "referencedDeclaration": 147,
                "src": "1234:11:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Stakeholder_$147_storage_ptr",
                  "typeString": "struct Stackable.Stakeholder"
                }
              },
              "id": 151,
              "nodeType": "ArrayTypeName",
              "src": "1234:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Stakeholder_$147_storage_$dyn_storage_ptr",
                "typeString": "struct Stackable.Stakeholder[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 153,
              "nodeType": "StructuredDocumentation",
              "src": "1275:109:5",
              "text": " @notice \n stakes is used to keep track of the INDEX for the stakers in the stakes array"
            },
            "id": 157,
            "mutability": "mutable",
            "name": "stakes",
            "nameLocation": "1426:6:5",
            "nodeType": "VariableDeclaration",
            "scope": 264,
            "src": "1389:43:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 156,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 154,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1397:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1389:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 155,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1408:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 158,
              "nodeType": "StructuredDocumentation",
              "src": "1438:122:5",
              "text": " @notice Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
            },
            "eventSelector": "b4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed",
            "id": 168,
            "name": "Staked",
            "nameLocation": "1571:6:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 167,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 160,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1594:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "1578:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 159,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1578:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 162,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1608:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "1600:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 161,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1600:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 164,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "1624:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "1616:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 163,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1616:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 166,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1639:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 168,
                  "src": "1631:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 165,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1631:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1577:72:5"
            },
            "src": "1565:85:5"
          },
          {
            "body": {
              "id": 203,
              "nodeType": "Block",
              "src": "1835:451:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 176,
                        "name": "stakeholders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 152,
                        "src": "1915:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Stakeholder_$147_storage_$dyn_storage",
                          "typeString": "struct Stackable.Stakeholder storage ref[] storage ref"
                        }
                      },
                      "id": 178,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1928:4:5",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "1915:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Stakeholder_$147_storage_$dyn_storage_ptr_$returns$_t_struct$_Stakeholder_$147_storage_$attached_to$_t_array$_t_struct$_Stakeholder_$147_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Stackable.Stakeholder storage ref[] storage pointer) returns (struct Stackable.Stakeholder storage ref)"
                      }
                    },
                    "id": 179,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1915:19:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stakeholder_$147_storage",
                      "typeString": "struct Stackable.Stakeholder storage ref"
                    }
                  },
                  "id": 180,
                  "nodeType": "ExpressionStatement",
                  "src": "1915:19:5"
                },
                {
                  "assignments": [
                    182
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 182,
                      "mutability": "mutable",
                      "name": "userIndex",
                      "nameLocation": "2046:9:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 203,
                      "src": "2038:17:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 181,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2038:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 187,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 186,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 183,
                        "name": "stakeholders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 152,
                        "src": "2058:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Stakeholder_$147_storage_$dyn_storage",
                          "typeString": "struct Stackable.Stakeholder storage ref[] storage ref"
                        }
                      },
                      "id": 184,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2071:6:5",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2058:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 185,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2080:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2058:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2038:43:5"
                },
                {
                  "expression": {
                    "id": 193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 188,
                          "name": "stakeholders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 152,
                          "src": "2135:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Stakeholder_$147_storage_$dyn_storage",
                            "typeString": "struct Stackable.Stakeholder storage ref[] storage ref"
                          }
                        },
                        "id": 190,
                        "indexExpression": {
                          "id": 189,
                          "name": "userIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 182,
                          "src": "2148:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2135:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stakeholder_$147_storage",
                          "typeString": "struct Stackable.Stakeholder storage ref"
                        }
                      },
                      "id": 191,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2159:4:5",
                      "memberName": "user",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 142,
                      "src": "2135:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 192,
                      "name": "stacker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 171,
                      "src": "2166:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2135:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 194,
                  "nodeType": "ExpressionStatement",
                  "src": "2135:38:5"
                },
                {
                  "expression": {
                    "id": 199,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 195,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 157,
                        "src": "2225:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 197,
                      "indexExpression": {
                        "id": 196,
                        "name": "stacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 171,
                        "src": "2232:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2225:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 198,
                      "name": "userIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 182,
                      "src": "2243:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2225:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 200,
                  "nodeType": "ExpressionStatement",
                  "src": "2225:27:5"
                },
                {
                  "expression": {
                    "id": 201,
                    "name": "userIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 182,
                    "src": "2270:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 175,
                  "id": 202,
                  "nodeType": "Return",
                  "src": "2263:16:5"
                }
              ]
            },
            "documentation": {
              "id": 169,
              "nodeType": "StructuredDocumentation",
              "src": "1656:105:5",
              "text": " @notice _addStakeholder takes care of adding a new stakeholder to the stakeholders array"
            },
            "id": 204,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addStakeholder",
            "nameLocation": "1775:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 172,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 171,
                  "mutability": "mutable",
                  "name": "stacker",
                  "nameLocation": "1799:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "1791:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1791:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1790:17:5"
            },
            "returnParameters": {
              "id": 175,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 174,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 204,
                  "src": "1826:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 173,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1826:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1825:9:5"
            },
            "scope": 264,
            "src": "1766:520:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 262,
              "nodeType": "Block",
              "src": "2536:476:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 213,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 211,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 207,
                          "src": "2603:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 212,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2613:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2603:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b6561626c653a20416d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 214,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2616:42:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_08257cc716c7a8611daaf87b01517d1594b7d75563c9ff5a71b7f19d2057e36f",
                          "typeString": "literal_string \"Stakeable: Amount must be greater than 0\""
                        },
                        "value": "Stakeable: Amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_08257cc716c7a8611daaf87b01517d1594b7d75563c9ff5a71b7f19d2057e36f",
                          "typeString": "literal_string \"Stakeable: Amount must be greater than 0\""
                        }
                      ],
                      "id": 210,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2595:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 215,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2595:64:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 216,
                  "nodeType": "ExpressionStatement",
                  "src": "2595:64:5"
                },
                {
                  "assignments": [
                    218
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 218,
                      "mutability": "mutable",
                      "name": "userIndex",
                      "nameLocation": "2678:9:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 262,
                      "src": "2670:17:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 217,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2670:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 223,
                  "initialValue": {
                    "baseExpression": {
                      "id": 219,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 157,
                      "src": "2690:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 222,
                    "indexExpression": {
                      "expression": {
                        "id": 220,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "2697:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 221,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2701:6:5",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "2697:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2690:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2670:38:5"
                },
                {
                  "assignments": [
                    225
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 225,
                      "mutability": "mutable",
                      "name": "timestamp",
                      "nameLocation": "2726:9:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 262,
                      "src": "2718:17:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 224,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2718:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 228,
                  "initialValue": {
                    "expression": {
                      "id": 226,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967292,
                      "src": "2738:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 227,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "2744:9:5",
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "2738:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2718:35:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 229,
                      "name": "userIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 218,
                      "src": "2768:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2781:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2768:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 240,
                  "nodeType": "IfStatement",
                  "src": "2764:84:5",
                  "trueBody": {
                    "id": 239,
                    "nodeType": "Block",
                    "src": "2784:64:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 237,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 232,
                            "name": "userIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 218,
                            "src": "2798:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 234,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "2826:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 235,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "2830:6:5",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "2826:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 233,
                              "name": "_addStakeholder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 204,
                              "src": "2810:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) returns (uint256)"
                              }
                            },
                            "id": 236,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2810:27:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2798:39:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 238,
                        "nodeType": "ExpressionStatement",
                        "src": "2798:39:5"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 247,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "2908:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2912:6:5",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "2908:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 249,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 207,
                            "src": "2920:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 250,
                            "name": "timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 225,
                            "src": "2929:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "id": 246,
                          "name": "Stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 140,
                          "src": "2902:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Stake_$140_storage_ptr_$",
                            "typeString": "type(struct Stackable.Stake storage pointer)"
                          }
                        },
                        "id": 251,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2902:37:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$140_memory_ptr",
                          "typeString": "struct Stackable.Stake memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Stake_$140_memory_ptr",
                          "typeString": "struct Stackable.Stake memory"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 241,
                            "name": "stakeholders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 152,
                            "src": "2858:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Stakeholder_$147_storage_$dyn_storage",
                              "typeString": "struct Stackable.Stakeholder storage ref[] storage ref"
                            }
                          },
                          "id": 243,
                          "indexExpression": {
                            "id": 242,
                            "name": "userIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 218,
                            "src": "2871:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2858:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stakeholder_$147_storage",
                            "typeString": "struct Stackable.Stakeholder storage ref"
                          }
                        },
                        "id": 244,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2882:14:5",
                        "memberName": "address_stakes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 146,
                        "src": "2858:38:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Stake_$140_storage_$dyn_storage",
                          "typeString": "struct Stackable.Stake storage ref[] storage ref"
                        }
                      },
                      "id": 245,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2897:4:5",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2858:43:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Stake_$140_storage_$dyn_storage_ptr_$_t_struct$_Stake_$140_storage_$returns$__$attached_to$_t_array$_t_struct$_Stake_$140_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Stackable.Stake storage ref[] storage pointer,struct Stackable.Stake storage ref)"
                      }
                    },
                    "id": 252,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2858:82:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 253,
                  "nodeType": "ExpressionStatement",
                  "src": "2858:82:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 255,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "2963:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 256,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "2967:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "2963:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 257,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 207,
                        "src": "2975:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 258,
                        "name": "userIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 218,
                        "src": "2984:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 259,
                        "name": "timestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 225,
                        "src": "2995:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 254,
                      "name": "Staked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 168,
                      "src": "2956:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2956:49:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 261,
                  "nodeType": "EmitStatement",
                  "src": "2951:54:5"
                }
              ]
            },
            "documentation": {
              "id": 205,
              "nodeType": "StructuredDocumentation",
              "src": "2292:197:5",
              "text": " @notice\n _Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container\n StakeID "
            },
            "id": 263,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_stake",
            "nameLocation": "2503:6:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 208,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 207,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2518:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "2510:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 206,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2510:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2509:17:5"
            },
            "returnParameters": {
              "id": 209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2536:0:5"
            },
            "scope": 264,
            "src": "2494:518:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "scope": 265,
        "src": "208:2806:5",
        "usedErrors": []
      }
    ],
    "src": "56:2958:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.18+commit.87f61d96.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xCDc7d9636c54b3f0c71F342F9F2caEA7076d7443",
      "transactionHash": "0x348837fcd17da6e49c723c80d4a2ff504d697fddaa2eab19f227610921ca09b8"
    }
  },
  "schemaVersion": "3.4.11",
  "updatedAt": "2023-02-17T17:18:43.641Z",
  "networkType": "ethereum",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "events": {
      "Staked(address,uint256,uint256,uint256)": {
        "notice": "Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
      }
    },
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Constructor,since this contract is not ment to be used without inheritance push once to stakeholders for it to work proplerly"
      }
    },
    "notice": "Stakeable is a contract who is ment to be inherited by other contract that wants Staking capabilities",
    "version": 1
  }
}