{
  "contractName": "Stackable",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "Staked",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_staker",
          "type": "address"
        }
      ],
      "name": "hasStake",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "total_amount",
              "type": "uint256"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "user",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "since",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "claimable",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Stackable.Stake[]",
              "name": "stakes",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Stackable.StakingSummary",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.18+commit.87f61d96\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"Staked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_staker\",\"type\":\"address\"}],\"name\":\"hasStake\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"total_amount\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"since\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"claimable\",\"type\":\"uint256\"}],\"internalType\":\"struct Stackable.Stake[]\",\"name\":\"stakes\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Stackable.StakingSummary\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"events\":{\"Staked(address,uint256,uint256,uint256)\":{\"notice\":\"Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable\"}},\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor,since this contract is not ment to be used without inheritance push once to stakeholders for it to work proplerly\"},\"hasStake(address)\":{\"notice\":\"hasStake is used to check if a account has stakes and the total amount along with all the seperate stakes\"}},\"notice\":\"Stakeable is a contract who is ment to be inherited by other contract that wants Staking capabilities\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/stackable.sol\":\"Stackable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/stackable.sol\":{\"keccak256\":\"0x3a3e0a4713395e405aeeb192be13714ae7f05eb1fddb1b685a2b32a4b5b51997\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://190b13abaa5165f0bd78800fb8b3f5a32047b59ff47be0b0cfd3df57661f2e7c\",\"dweb:/ipfs/QmZaDHm5jBFnyT8EWqrdJKCNDSNezFYCvnTq73w7HSfUGc\"]}},\"version\":1}",
  "bytecode": "0x60806040526103e860025534801561001657600080fd5b50600060018160018154018082558091505003906000526020600020905050610682806100446000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e73e14bf14610030575b600080fd5b61004a6004803603810190610045919061032c565b610060565b60405161005791906104c2565b60405180910390f35b6100686102af565b6000806040518060400160405280600081526020016000600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054815481106100d0576100cf6104e4565b5b9060005260206000209060020201600101805480602002602001604051908101604052809291908181526020016000905b828210156101a757838290600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152505081526020019060010190610101565b50505050815250905060005b8160200151518110156102585760006101e9836020015183815181106101dc576101db6104e4565b5b602002602001015161026d565b90508083602001518381518110610203576102026104e4565b5b602002602001015160600181815250508260200151828151811061022a576102296104e4565b5b602002602001015160200151846102419190610542565b9350506001816102519190610542565b90506101b3565b50818160000181815250508092505050919050565b60006002548260200151610e1084604001514261028a9190610576565b61029491906105d9565b61029e919061060a565b6102a891906105d9565b9050919050565b604051806040016040528060008152602001606081525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102f9826102ce565b9050919050565b610309816102ee565b811461031457600080fd5b50565b60008135905061032681610300565b92915050565b600060208284031215610342576103416102c9565b5b600061035084828501610317565b91505092915050565b6000819050919050565b61036c81610359565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6103a7816102ee565b82525050565b6080820160008201516103c3600085018261039e565b5060208201516103d66020850182610363565b5060408201516103e96040850182610363565b5060608201516103fc6060850182610363565b50505050565b600061040e83836103ad565b60808301905092915050565b6000602082019050919050565b600061043282610372565b61043c818561037d565b93506104478361038e565b8060005b8381101561047857815161045f8882610402565b975061046a8361041a565b92505060018101905061044b565b5085935050505092915050565b600060408301600083015161049d6000860182610363565b50602083015184820360208601526104b58282610427565b9150508091505092915050565b600060208201905081810360008301526104dc8184610485565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061054d82610359565b915061055883610359565b92508282019050808211156105705761056f610513565b5b92915050565b600061058182610359565b915061058c83610359565b92508282039050818111156105a4576105a3610513565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006105e482610359565b91506105ef83610359565b9250826105ff576105fe6105aa565b5b828204905092915050565b600061061582610359565b915061062083610359565b925082820261062e81610359565b9150828204841483151761064557610644610513565b5b509291505056fea2646970667358221220c6bf16cca5284fa89c64e298e030ab0a6f32ccc3aa48d020cfdad40f0792ab8464736f6c63430008120033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e73e14bf14610030575b600080fd5b61004a6004803603810190610045919061032c565b610060565b60405161005791906104c2565b60405180910390f35b6100686102af565b6000806040518060400160405280600081526020016000600160008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054815481106100d0576100cf6104e4565b5b9060005260206000209060020201600101805480602002602001604051908101604052809291908181526020016000905b828210156101a757838290600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820154815260200160038201548152505081526020019060010190610101565b50505050815250905060005b8160200151518110156102585760006101e9836020015183815181106101dc576101db6104e4565b5b602002602001015161026d565b90508083602001518381518110610203576102026104e4565b5b602002602001015160600181815250508260200151828151811061022a576102296104e4565b5b602002602001015160200151846102419190610542565b9350506001816102519190610542565b90506101b3565b50818160000181815250508092505050919050565b60006002548260200151610e1084604001514261028a9190610576565b61029491906105d9565b61029e919061060a565b6102a891906105d9565b9050919050565b604051806040016040528060008152602001606081525090565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102f9826102ce565b9050919050565b610309816102ee565b811461031457600080fd5b50565b60008135905061032681610300565b92915050565b600060208284031215610342576103416102c9565b5b600061035084828501610317565b91505092915050565b6000819050919050565b61036c81610359565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6103a7816102ee565b82525050565b6080820160008201516103c3600085018261039e565b5060208201516103d66020850182610363565b5060408201516103e96040850182610363565b5060608201516103fc6060850182610363565b50505050565b600061040e83836103ad565b60808301905092915050565b6000602082019050919050565b600061043282610372565b61043c818561037d565b93506104478361038e565b8060005b8381101561047857815161045f8882610402565b975061046a8361041a565b92505060018101905061044b565b5085935050505092915050565b600060408301600083015161049d6000860182610363565b50602083015184820360208601526104b58282610427565b9150508091505092915050565b600060208201905081810360008301526104dc8184610485565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061054d82610359565b915061055883610359565b92508282019050808211156105705761056f610513565b5b92915050565b600061058182610359565b915061058c83610359565b92508282039050818111156105a4576105a3610513565b5b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006105e482610359565b91506105ef83610359565b9250826105ff576105fe6105aa565b5b828204905092915050565b600061061582610359565b915061062083610359565b925082820261062e81610359565b9150828204841483151761064557610644610513565b5b509291505056fea2646970667358221220c6bf16cca5284fa89c64e298e030ab0a6f32ccc3aa48d020cfdad40f0792ab8464736f6c63430008120033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:7012:7",
        "statements": [
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "47:35:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "57:19:7",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "73:2:7",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "67:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "67:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulIdentifier",
                      "src": "57:6:7"
                    }
                  ]
                }
              ]
            },
            "name": "allocate_unbounded",
            "nodeType": "YulFunctionDefinition",
            "returnVariables": [
              {
                "name": "memPtr",
                "nodeType": "YulTypedName",
                "src": "40:6:7",
                "type": ""
              }
            ],
            "src": "7:75:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "177:28:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "194:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "197:1:7",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "187:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "187:12:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "187:12:7"
                }
              ]
            },
            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
            "nodeType": "YulFunctionDefinition",
            "src": "88:117:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "300:28:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "317:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "320:1:7",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "310:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "310:12:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "310:12:7"
                }
              ]
            },
            "name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
            "nodeType": "YulFunctionDefinition",
            "src": "211:117:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "379:81:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "389:65:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "404:5:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "411:42:7",
                        "type": "",
                        "value": "0xffffffffffffffffffffffffffffffffffffffff"
                      }
                    ],
                    "functionName": {
                      "name": "and",
                      "nodeType": "YulIdentifier",
                      "src": "400:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "400:54:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "389:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint160",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "361:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "371:7:7",
                "type": ""
              }
            ],
            "src": "334:126:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "511:51:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "521:35:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "550:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint160",
                      "nodeType": "YulIdentifier",
                      "src": "532:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "532:24:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "521:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "493:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "503:7:7",
                "type": ""
              }
            ],
            "src": "466:96:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "611:79:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "668:16:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "677:1:7",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "680:1:7",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "670:6:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "670:12:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "670:12:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "634:5:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "659:5:7"
                              }
                            ],
                            "functionName": {
                              "name": "cleanup_t_address",
                              "nodeType": "YulIdentifier",
                              "src": "641:17:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "641:24:7"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "631:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "631:35:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "624:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "624:43:7"
                  },
                  "nodeType": "YulIf",
                  "src": "621:63:7"
                }
              ]
            },
            "name": "validator_revert_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "604:5:7",
                "type": ""
              }
            ],
            "src": "568:122:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "748:87:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "758:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "780:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "767:12:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "767:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "758:5:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "823:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "validator_revert_t_address",
                      "nodeType": "YulIdentifier",
                      "src": "796:26:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "796:33:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "796:33:7"
                }
              ]
            },
            "name": "abi_decode_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "726:6:7",
                "type": ""
              },
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "734:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "742:5:7",
                "type": ""
              }
            ],
            "src": "696:139:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "907:263:7",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "953:83:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
                            "nodeType": "YulIdentifier",
                            "src": "955:77:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "955:79:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "955:79:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "928:7:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "937:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "924:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "924:23:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "949:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "920:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "920:32:7"
                  },
                  "nodeType": "YulIf",
                  "src": "917:119:7"
                },
                {
                  "nodeType": "YulBlock",
                  "src": "1046:117:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "1061:15:7",
                      "value": {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1075:1:7",
                        "type": "",
                        "value": "0"
                      },
                      "variables": [
                        {
                          "name": "offset",
                          "nodeType": "YulTypedName",
                          "src": "1065:6:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "1090:63:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "headStart",
                                "nodeType": "YulIdentifier",
                                "src": "1125:9:7"
                              },
                              {
                                "name": "offset",
                                "nodeType": "YulIdentifier",
                                "src": "1136:6:7"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1121:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1121:22:7"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1145:7:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_decode_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1100:20:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1100:53:7"
                      },
                      "variableNames": [
                        {
                          "name": "value0",
                          "nodeType": "YulIdentifier",
                          "src": "1090:6:7"
                        }
                      ]
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "877:9:7",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "888:7:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "900:6:7",
                "type": ""
              }
            ],
            "src": "841:329:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1221:32:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1231:16:7",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "1242:5:7"
                  },
                  "variableNames": [
                    {
                      "name": "cleaned",
                      "nodeType": "YulIdentifier",
                      "src": "1231:7:7"
                    }
                  ]
                }
              ]
            },
            "name": "cleanup_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1203:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "cleaned",
                "nodeType": "YulTypedName",
                "src": "1213:7:7",
                "type": ""
              }
            ],
            "src": "1176:77:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1314:53:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1331:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1354:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "1336:17:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1336:24:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1324:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1324:37:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1324:37:7"
                }
              ]
            },
            "name": "abi_encode_t_uint256_to_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1302:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1309:3:7",
                "type": ""
              }
            ],
            "src": "1259:108:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1469:40:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1480:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "1496:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1490:5:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1490:12:7"
                  },
                  "variableNames": [
                    {
                      "name": "length",
                      "nodeType": "YulIdentifier",
                      "src": "1480:6:7"
                    }
                  ]
                }
              ]
            },
            "name": "array_length_t_array$_t_struct$_Stake_$142_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1452:5:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1462:6:7",
                "type": ""
              }
            ],
            "src": "1373:136:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1638:73:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1655:3:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "1660:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1648:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1648:19:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1648:19:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1676:29:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1695:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1700:4:7",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1691:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1691:14:7"
                  },
                  "variableNames": [
                    {
                      "name": "updated_pos",
                      "nodeType": "YulIdentifier",
                      "src": "1676:11:7"
                    }
                  ]
                }
              ]
            },
            "name": "array_storeLengthForEncoding_t_array$_t_struct$_Stake_$142_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1610:3:7",
                "type": ""
              },
              {
                "name": "length",
                "nodeType": "YulTypedName",
                "src": "1615:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updated_pos",
                "nodeType": "YulTypedName",
                "src": "1626:11:7",
                "type": ""
              }
            ],
            "src": "1515:196:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1811:60:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1821:11:7",
                  "value": {
                    "name": "ptr",
                    "nodeType": "YulIdentifier",
                    "src": "1829:3:7"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "1821:4:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1842:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "1854:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1859:4:7",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1850:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1850:14:7"
                  },
                  "variableNames": [
                    {
                      "name": "data",
                      "nodeType": "YulIdentifier",
                      "src": "1842:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "array_dataslot_t_array$_t_struct$_Stake_$142_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "1798:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "data",
                "nodeType": "YulTypedName",
                "src": "1806:4:7",
                "type": ""
              }
            ],
            "src": "1717:154:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1932:53:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "1949:3:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "1972:5:7"
                          }
                        ],
                        "functionName": {
                          "name": "cleanup_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "1954:17:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1954:24:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1942:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1942:37:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1942:37:7"
                }
              ]
            },
            "name": "abi_encode_t_address_to_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "1920:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "1927:3:7",
                "type": ""
              }
            ],
            "src": "1877:108:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2147:747:7",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2157:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "2173:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2178:4:7",
                        "type": "",
                        "value": "0x80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2169:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2169:14:7"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "2161:4:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2193:164:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2228:43:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2258:5:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2265:4:7",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2254:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2254:16:7"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2248:5:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2248:23:7"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "2232:12:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "2318:12:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2336:3:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2341:4:7",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2332:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2332:14:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_address_to_t_address",
                          "nodeType": "YulIdentifier",
                          "src": "2284:33:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2284:63:7"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2284:63:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2367:166:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2404:43:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2434:5:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2441:4:7",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2430:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2430:16:7"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2424:5:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2424:23:7"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "2408:12:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "2494:12:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2512:3:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2517:4:7",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2508:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2508:14:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2460:33:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2460:63:7"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2460:63:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2543:165:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2579:43:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2609:5:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2616:4:7",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2605:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2605:16:7"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2599:5:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2599:23:7"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "2583:12:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "2669:12:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2687:3:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2692:4:7",
                                "type": "",
                                "value": "0x40"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2683:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2683:14:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2635:33:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2635:63:7"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2635:63:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "2718:169:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "2758:43:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2788:5:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2795:4:7",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2784:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2784:16:7"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "2778:5:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2778:23:7"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "2762:12:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "2848:12:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "2866:3:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2871:4:7",
                                "type": "",
                                "value": "0x60"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "2862:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2862:14:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "2814:33:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2814:63:7"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "2814:63:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_Stake_$142_memory_ptr_to_t_struct$_Stake_$142_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "2134:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "2141:3:7",
                "type": ""
              }
            ],
            "src": "2047:847:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3024:143:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "3112:6:7"
                      },
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3120:3:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_Stake_$142_memory_ptr_to_t_struct$_Stake_$142_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3034:77:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3034:90:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3034:90:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3133:28:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3151:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3156:4:7",
                        "type": "",
                        "value": "0x80"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3147:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3147:14:7"
                  },
                  "variableNames": [
                    {
                      "name": "updatedPos",
                      "nodeType": "YulIdentifier",
                      "src": "3133:10:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encodeUpdatedPos_t_struct$_Stake_$142_memory_ptr_to_t_struct$_Stake_$142_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2997:6:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3005:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "updatedPos",
                "nodeType": "YulTypedName",
                "src": "3013:10:7",
                "type": ""
              }
            ],
            "src": "2900:267:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3270:38:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "3280:22:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "ptr",
                        "nodeType": "YulIdentifier",
                        "src": "3292:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3297:4:7",
                        "type": "",
                        "value": "0x20"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3288:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3288:14:7"
                  },
                  "variableNames": [
                    {
                      "name": "next",
                      "nodeType": "YulIdentifier",
                      "src": "3280:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "array_nextElement_t_array$_t_struct$_Stake_$142_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "ptr",
                "nodeType": "YulTypedName",
                "src": "3257:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "next",
                "nodeType": "YulTypedName",
                "src": "3265:4:7",
                "type": ""
              }
            ],
            "src": "3173:135:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3532:730:7",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3542:90:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3626:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "array_length_t_array$_t_struct$_Stake_$142_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3556:69:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3556:76:7"
                  },
                  "variables": [
                    {
                      "name": "length",
                      "nodeType": "YulTypedName",
                      "src": "3546:6:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3641:105:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "3734:3:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3739:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "array_storeLengthForEncoding_t_array$_t_struct$_Stake_$142_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3648:85:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3648:98:7"
                  },
                  "variableNames": [
                    {
                      "name": "pos",
                      "nodeType": "YulIdentifier",
                      "src": "3641:3:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3755:93:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value",
                        "nodeType": "YulIdentifier",
                        "src": "3842:5:7"
                      }
                    ],
                    "functionName": {
                      "name": "array_dataslot_t_array$_t_struct$_Stake_$142_memory_ptr_$dyn_memory_ptr",
                      "nodeType": "YulIdentifier",
                      "src": "3770:71:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3770:78:7"
                  },
                  "variables": [
                    {
                      "name": "baseRef",
                      "nodeType": "YulTypedName",
                      "src": "3759:7:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "3857:21:7",
                  "value": {
                    "name": "baseRef",
                    "nodeType": "YulIdentifier",
                    "src": "3871:7:7"
                  },
                  "variables": [
                    {
                      "name": "srcPtr",
                      "nodeType": "YulTypedName",
                      "src": "3861:6:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "3947:290:7",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3961:34:7",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "3988:6:7"
                            }
                          ],
                          "functionName": {
                            "name": "mload",
                            "nodeType": "YulIdentifier",
                            "src": "3982:5:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3982:13:7"
                        },
                        "variables": [
                          {
                            "name": "elementValue0",
                            "nodeType": "YulTypedName",
                            "src": "3965:13:7",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4008:114:7",
                        "value": {
                          "arguments": [
                            {
                              "name": "elementValue0",
                              "nodeType": "YulIdentifier",
                              "src": "4103:13:7"
                            },
                            {
                              "name": "pos",
                              "nodeType": "YulIdentifier",
                              "src": "4118:3:7"
                            }
                          ],
                          "functionName": {
                            "name": "abi_encodeUpdatedPos_t_struct$_Stake_$142_memory_ptr_to_t_struct$_Stake_$142_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "4015:87:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4015:107:7"
                        },
                        "variableNames": [
                          {
                            "name": "pos",
                            "nodeType": "YulIdentifier",
                            "src": "4008:3:7"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "4135:92:7",
                        "value": {
                          "arguments": [
                            {
                              "name": "srcPtr",
                              "nodeType": "YulIdentifier",
                              "src": "4220:6:7"
                            }
                          ],
                          "functionName": {
                            "name": "array_nextElement_t_array$_t_struct$_Stake_$142_memory_ptr_$dyn_memory_ptr",
                            "nodeType": "YulIdentifier",
                            "src": "4145:74:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4145:82:7"
                        },
                        "variableNames": [
                          {
                            "name": "srcPtr",
                            "nodeType": "YulIdentifier",
                            "src": "4135:6:7"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "i",
                        "nodeType": "YulIdentifier",
                        "src": "3909:1:7"
                      },
                      {
                        "name": "length",
                        "nodeType": "YulIdentifier",
                        "src": "3912:6:7"
                      }
                    ],
                    "functionName": {
                      "name": "lt",
                      "nodeType": "YulIdentifier",
                      "src": "3906:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3906:13:7"
                  },
                  "nodeType": "YulForLoop",
                  "post": {
                    "nodeType": "YulBlock",
                    "src": "3920:18:7",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3922:14:7",
                        "value": {
                          "arguments": [
                            {
                              "name": "i",
                              "nodeType": "YulIdentifier",
                              "src": "3931:1:7"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3934:1:7",
                              "type": "",
                              "value": "1"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3927:3:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3927:9:7"
                        },
                        "variableNames": [
                          {
                            "name": "i",
                            "nodeType": "YulIdentifier",
                            "src": "3922:1:7"
                          }
                        ]
                      }
                    ]
                  },
                  "pre": {
                    "nodeType": "YulBlock",
                    "src": "3891:14:7",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "3893:10:7",
                        "value": {
                          "kind": "number",
                          "nodeType": "YulLiteral",
                          "src": "3902:1:7",
                          "type": "",
                          "value": "0"
                        },
                        "variables": [
                          {
                            "name": "i",
                            "nodeType": "YulTypedName",
                            "src": "3897:1:7",
                            "type": ""
                          }
                        ]
                      }
                    ]
                  },
                  "src": "3887:350:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "4246:10:7",
                  "value": {
                    "name": "pos",
                    "nodeType": "YulIdentifier",
                    "src": "4253:3:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "4246:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_array$_t_struct$_Stake_$142_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$142_memory_ptr_$dyn_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "3511:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "3518:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "3527:3:7",
                "type": ""
              }
            ],
            "src": "3374:888:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "4478:566:7",
              "statements": [
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "4488:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "pos",
                        "nodeType": "YulIdentifier",
                        "src": "4504:3:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "4509:4:7",
                        "type": "",
                        "value": "0x40"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "4500:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "4500:14:7"
                  },
                  "variables": [
                    {
                      "name": "tail",
                      "nodeType": "YulTypedName",
                      "src": "4492:4:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4524:172:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4567:43:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4597:5:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4604:4:7",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4593:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4593:16:7"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4587:5:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4587:23:7"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "4571:12:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "4657:12:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4675:3:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4680:4:7",
                                "type": "",
                                "value": "0x00"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4671:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4671:14:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_uint256_to_t_uint256",
                          "nodeType": "YulIdentifier",
                          "src": "4623:33:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4623:63:7"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4623:63:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulBlock",
                  "src": "4706:311:7",
                  "statements": [
                    {
                      "nodeType": "YulVariableDeclaration",
                      "src": "4743:43:7",
                      "value": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "4773:5:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4780:4:7",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4769:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4769:16:7"
                          }
                        ],
                        "functionName": {
                          "name": "mload",
                          "nodeType": "YulIdentifier",
                          "src": "4763:5:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4763:23:7"
                      },
                      "variables": [
                        {
                          "name": "memberValue0",
                          "nodeType": "YulTypedName",
                          "src": "4747:12:7",
                          "type": ""
                        }
                      ]
                    },
                    {
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4811:3:7"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "4816:4:7",
                                "type": "",
                                "value": "0x20"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "4807:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4807:14:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "4827:4:7"
                              },
                              {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "4833:3:7"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "4823:3:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "4823:14:7"
                          }
                        ],
                        "functionName": {
                          "name": "mstore",
                          "nodeType": "YulIdentifier",
                          "src": "4800:6:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4800:38:7"
                      },
                      "nodeType": "YulExpressionStatement",
                      "src": "4800:38:7"
                    },
                    {
                      "nodeType": "YulAssignment",
                      "src": "4851:155:7",
                      "value": {
                        "arguments": [
                          {
                            "name": "memberValue0",
                            "nodeType": "YulIdentifier",
                            "src": "4987:12:7"
                          },
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5001:4:7"
                          }
                        ],
                        "functionName": {
                          "name": "abi_encode_t_array$_t_struct$_Stake_$142_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$142_memory_ptr_$dyn_memory_ptr",
                          "nodeType": "YulIdentifier",
                          "src": "4859:127:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "4859:147:7"
                      },
                      "variableNames": [
                        {
                          "name": "tail",
                          "nodeType": "YulIdentifier",
                          "src": "4851:4:7"
                        }
                      ]
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5027:11:7",
                  "value": {
                    "name": "tail",
                    "nodeType": "YulIdentifier",
                    "src": "5034:4:7"
                  },
                  "variableNames": [
                    {
                      "name": "end",
                      "nodeType": "YulIdentifier",
                      "src": "5027:3:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_t_struct$_StakingSummary_$156_memory_ptr_to_t_struct$_StakingSummary_$156_memory_ptr_fromStack",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "4457:5:7",
                "type": ""
              },
              {
                "name": "pos",
                "nodeType": "YulTypedName",
                "src": "4464:3:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "end",
                "nodeType": "YulTypedName",
                "src": "4473:3:7",
                "type": ""
              }
            ],
            "src": "4342:702:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5210:237:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5220:26:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "5232:9:7"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5243:2:7",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5228:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5228:18:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5220:4:7"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5267:9:7"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "5278:1:7",
                            "type": "",
                            "value": "0"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "5263:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5263:17:7"
                      },
                      {
                        "arguments": [
                          {
                            "name": "tail",
                            "nodeType": "YulIdentifier",
                            "src": "5286:4:7"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "5292:9:7"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "5282:3:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "5282:20:7"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5256:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5256:47:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5256:47:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5312:128:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "5426:6:7"
                      },
                      {
                        "name": "tail",
                        "nodeType": "YulIdentifier",
                        "src": "5435:4:7"
                      }
                    ],
                    "functionName": {
                      "name": "abi_encode_t_struct$_StakingSummary_$156_memory_ptr_to_t_struct$_StakingSummary_$156_memory_ptr_fromStack",
                      "nodeType": "YulIdentifier",
                      "src": "5320:105:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5320:120:7"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "5312:4:7"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_struct$_StakingSummary_$156_memory_ptr__to_t_struct$_StakingSummary_$156_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "5182:9:7",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "5194:6:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "5205:4:7",
                "type": ""
              }
            ],
            "src": "5050:397:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5481:152:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5498:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5501:77:7",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5491:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5491:88:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5491:88:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5595:1:7",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5598:4:7",
                        "type": "",
                        "value": "0x32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5588:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5588:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5588:15:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5619:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5622:4:7",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5612:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5612:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5612:15:7"
                }
              ]
            },
            "name": "panic_error_0x32",
            "nodeType": "YulFunctionDefinition",
            "src": "5453:180:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5667:152:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5684:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5687:77:7",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5677:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5677:88:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5677:88:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5781:1:7",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5784:4:7",
                        "type": "",
                        "value": "0x11"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "5774:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5774:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5774:15:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5805:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "5808:4:7",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "5798:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5798:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "5798:15:7"
                }
              ]
            },
            "name": "panic_error_0x11",
            "nodeType": "YulFunctionDefinition",
            "src": "5639:180:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "5869:147:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "5879:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5902:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "5884:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5884:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "5879:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5913:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5936:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "5918:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5918:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "5913:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "5947:16:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5958:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "5961:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "5954:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5954:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "sum",
                      "nodeType": "YulIdentifier",
                      "src": "5947:3:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "5987:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "5989:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "5989:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "5989:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "5979:1:7"
                      },
                      {
                        "name": "sum",
                        "nodeType": "YulIdentifier",
                        "src": "5982:3:7"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "5976:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "5976:10:7"
                  },
                  "nodeType": "YulIf",
                  "src": "5973:36:7"
                }
              ]
            },
            "name": "checked_add_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "5856:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "5859:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "sum",
                "nodeType": "YulTypedName",
                "src": "5865:3:7",
                "type": ""
              }
            ],
            "src": "5825:191:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6067:149:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6077:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6100:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6082:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6082:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "6077:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6111:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6134:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6116:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6116:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "6111:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6145:17:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6157:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6160:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "sub",
                      "nodeType": "YulIdentifier",
                      "src": "6153:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6153:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "diff",
                      "nodeType": "YulIdentifier",
                      "src": "6145:4:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6187:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6189:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6189:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6189:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "diff",
                        "nodeType": "YulIdentifier",
                        "src": "6178:4:7"
                      },
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6184:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "6175:2:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6175:11:7"
                  },
                  "nodeType": "YulIf",
                  "src": "6172:37:7"
                }
              ]
            },
            "name": "checked_sub_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6053:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6056:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "diff",
                "nodeType": "YulTypedName",
                "src": "6062:4:7",
                "type": ""
              }
            ],
            "src": "6022:194:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6250:152:7",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6267:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6270:77:7",
                        "type": "",
                        "value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6260:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6260:88:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6260:88:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6364:1:7",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6367:4:7",
                        "type": "",
                        "value": "0x12"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "6357:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6357:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6357:15:7"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6388:1:7",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "6391:4:7",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "6381:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6381:15:7"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "6381:15:7"
                }
              ]
            },
            "name": "panic_error_0x12",
            "nodeType": "YulFunctionDefinition",
            "src": "6222:180:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6450:143:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6460:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6483:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6465:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6465:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "6460:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6494:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6517:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6499:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6499:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "6494:1:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6541:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x12",
                            "nodeType": "YulIdentifier",
                            "src": "6543:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6543:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6543:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6538:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6531:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6531:9:7"
                  },
                  "nodeType": "YulIf",
                  "src": "6528:35:7"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6573:14:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6582:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6585:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "div",
                      "nodeType": "YulIdentifier",
                      "src": "6578:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6578:9:7"
                  },
                  "variableNames": [
                    {
                      "name": "r",
                      "nodeType": "YulIdentifier",
                      "src": "6573:1:7"
                    }
                  ]
                }
              ]
            },
            "name": "checked_div_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6439:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6442:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "r",
                "nodeType": "YulTypedName",
                "src": "6448:1:7",
                "type": ""
              }
            ],
            "src": "6408:185:7"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "6647:362:7",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "6657:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6680:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6662:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6662:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "x",
                      "nodeType": "YulIdentifier",
                      "src": "6657:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6691:25:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6714:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6696:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6696:20:7"
                  },
                  "variableNames": [
                    {
                      "name": "y",
                      "nodeType": "YulIdentifier",
                      "src": "6691:1:7"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "6725:28:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "x",
                        "nodeType": "YulIdentifier",
                        "src": "6748:1:7"
                      },
                      {
                        "name": "y",
                        "nodeType": "YulIdentifier",
                        "src": "6751:1:7"
                      }
                    ],
                    "functionName": {
                      "name": "mul",
                      "nodeType": "YulIdentifier",
                      "src": "6744:3:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6744:9:7"
                  },
                  "variables": [
                    {
                      "name": "product_raw",
                      "nodeType": "YulTypedName",
                      "src": "6729:11:7",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "6762:41:7",
                  "value": {
                    "arguments": [
                      {
                        "name": "product_raw",
                        "nodeType": "YulIdentifier",
                        "src": "6791:11:7"
                      }
                    ],
                    "functionName": {
                      "name": "cleanup_t_uint256",
                      "nodeType": "YulIdentifier",
                      "src": "6773:17:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6773:30:7"
                  },
                  "variableNames": [
                    {
                      "name": "product",
                      "nodeType": "YulIdentifier",
                      "src": "6762:7:7"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "6980:22:7",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x11",
                            "nodeType": "YulIdentifier",
                            "src": "6982:16:7"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "6982:18:7"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "6982:18:7"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "x",
                                "nodeType": "YulIdentifier",
                                "src": "6913:1:7"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "6906:6:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6906:9:7"
                          },
                          {
                            "arguments": [
                              {
                                "name": "y",
                                "nodeType": "YulIdentifier",
                                "src": "6936:1:7"
                              },
                              {
                                "arguments": [
                                  {
                                    "name": "product",
                                    "nodeType": "YulIdentifier",
                                    "src": "6943:7:7"
                                  },
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "6952:1:7"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "6939:3:7"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6939:15:7"
                              }
                            ],
                            "functionName": {
                              "name": "eq",
                              "nodeType": "YulIdentifier",
                              "src": "6933:2:7"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "6933:22:7"
                          }
                        ],
                        "functionName": {
                          "name": "or",
                          "nodeType": "YulIdentifier",
                          "src": "6886:2:7"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "6886:83:7"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "6866:6:7"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "6866:113:7"
                  },
                  "nodeType": "YulIf",
                  "src": "6863:139:7"
                }
              ]
            },
            "name": "checked_mul_t_uint256",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "x",
                "nodeType": "YulTypedName",
                "src": "6630:1:7",
                "type": ""
              },
              {
                "name": "y",
                "nodeType": "YulTypedName",
                "src": "6633:1:7",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "product",
                "nodeType": "YulTypedName",
                "src": "6639:7:7",
                "type": ""
              }
            ],
            "src": "6599:410:7"
          }
        ]
      },
      "contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function array_length_t_array$_t_struct$_Stake_$142_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Stake_$142_memory_ptr_$dyn_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Stake_$142_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    // struct Stackable.Stake -> struct Stackable.Stake\n    function abi_encode_t_struct$_Stake_$142_memory_ptr_to_t_struct$_Stake_$142_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x80)\n\n        {\n            // user\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // amount\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // since\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // claimable\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x60))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Stake_$142_memory_ptr_to_t_struct$_Stake_$142_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_Stake_$142_memory_ptr_to_t_struct$_Stake_$142_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x80)\n    }\n\n    function array_nextElement_t_array$_t_struct$_Stake_$142_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct Stackable.Stake[] -> struct Stackable.Stake[]\n    function abi_encode_t_array$_t_struct$_Stake_$142_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$142_memory_ptr_$dyn_memory_ptr(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Stake_$142_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Stake_$142_memory_ptr_$dyn_memory_ptr(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_Stake_$142_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_Stake_$142_memory_ptr_to_t_struct$_Stake_$142_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_Stake_$142_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // struct Stackable.StakingSummary -> struct Stackable.StakingSummary\n    function abi_encode_t_struct$_StakingSummary_$156_memory_ptr_to_t_struct$_StakingSummary_$156_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0x40)\n\n        {\n            // total_amount\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // stakes\n\n            let memberValue0 := mload(add(value, 0x20))\n\n            mstore(add(pos, 0x20), sub(tail, pos))\n            tail := abi_encode_t_array$_t_struct$_Stake_$142_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Stake_$142_memory_ptr_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_StakingSummary_$156_memory_ptr__to_t_struct$_StakingSummary_$156_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_StakingSummary_$156_memory_ptr_to_t_struct$_StakingSummary_$156_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        sum := add(x, y)\n\n        if gt(x, sum) { panic_error_0x11() }\n\n    }\n\n    function checked_sub_t_uint256(x, y) -> diff {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        diff := sub(x, y)\n\n        if gt(diff, x) { panic_error_0x11() }\n\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function checked_mul_t_uint256(x, y) -> product {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        let product_raw := mul(x, y)\n        product := cleanup_t_uint256(product_raw)\n\n        // overflow, if x != 0 and y != product/x\n        if iszero(\n            or(\n                iszero(x),\n                eq(y, div(product, x))\n            )\n        ) { panic_error_0x11() }\n\n    }\n\n}\n",
      "id": 7,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "208:6843:5:-:0;;;3591:4;3558:37;;395:126;;;;;;;;;;494:12;:19;;;;;;;;;;;;;;;;;;;;;;;208:6843;;;;;;",
  "deployedSourceMap": "208:6843:5:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6210:839;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;6266:21;;:::i;:::-;6379:24;6482:29;6514:63;;;;;;;;6529:1;6514:63;;;;6532:12;6545:6;:15;6552:7;6545:15;;;;;;;;;;;;;;;;6532:29;;;;;;;;:::i;:::-;;;;;;;;;;;;:44;;6514:63;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6482:95;;6649:9;6644:280;6668:7;:14;;;:21;6664:1;:25;6644:280;;;6713:23;6739:39;6760:7;:14;;;6775:1;6760:17;;;;;;;;:::i;:::-;;;;;;;;6739:20;:39::i;:::-;6713:65;;6822:15;6792:7;:14;;;6807:1;6792:17;;;;;;;;:::i;:::-;;;;;;;;:27;;:45;;;;;6889:7;:14;;;6904:1;6889:17;;;;;;;;:::i;:::-;;;;;;;;:24;;;6870:16;:43;;;;:::i;:::-;6851:62;;6699:225;6696:1;6691:6;;;;;:::i;:::-;;;6644:280;;;;7002:16;6979:7;:20;;:39;;;;;7035:7;7028:14;;;;6210:839;;;:::o;3780:787::-;3862:7;4547:13;;4522:14;:21;;;4511:7;4487:14;:20;;;4469:15;:38;;;;:::i;:::-;4468:50;;;;:::i;:::-;4467:76;;;;:::i;:::-;4466:94;;;;:::i;:::-;4459:101;;3780:787;;;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;:::o;88:117:7:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:77::-;1213:7;1242:5;1231:16;;1176:77;;;:::o;1259:108::-;1336:24;1354:5;1336:24;:::i;:::-;1331:3;1324:37;1259:108;;:::o;1373:136::-;1462:6;1496:5;1490:12;1480:22;;1373:136;;;:::o;1515:196::-;1626:11;1660:6;1655:3;1648:19;1700:4;1695:3;1691:14;1676:29;;1515:196;;;;:::o;1717:154::-;1806:4;1829:3;1821:11;;1859:4;1854:3;1850:14;1842:22;;1717:154;;;:::o;1877:108::-;1954:24;1972:5;1954:24;:::i;:::-;1949:3;1942:37;1877:108;;:::o;2047:847::-;2178:4;2173:3;2169:14;2265:4;2258:5;2254:16;2248:23;2284:63;2341:4;2336:3;2332:14;2318:12;2284:63;:::i;:::-;2193:164;2441:4;2434:5;2430:16;2424:23;2460:63;2517:4;2512:3;2508:14;2494:12;2460:63;:::i;:::-;2367:166;2616:4;2609:5;2605:16;2599:23;2635:63;2692:4;2687:3;2683:14;2669:12;2635:63;:::i;:::-;2543:165;2795:4;2788:5;2784:16;2778:23;2814:63;2871:4;2866:3;2862:14;2848:12;2814:63;:::i;:::-;2718:169;2147:747;2047:847;;:::o;2900:267::-;3013:10;3034:90;3120:3;3112:6;3034:90;:::i;:::-;3156:4;3151:3;3147:14;3133:28;;2900:267;;;;:::o;3173:135::-;3265:4;3297;3292:3;3288:14;3280:22;;3173:135;;;:::o;3374:888::-;3527:3;3556:76;3626:5;3556:76;:::i;:::-;3648:98;3739:6;3734:3;3648:98;:::i;:::-;3641:105;;3770:78;3842:5;3770:78;:::i;:::-;3871:7;3902:1;3887:350;3912:6;3909:1;3906:13;3887:350;;;3988:6;3982:13;4015:107;4118:3;4103:13;4015:107;:::i;:::-;4008:114;;4145:82;4220:6;4145:82;:::i;:::-;4135:92;;3947:290;3934:1;3931;3927:9;3922:14;;3887:350;;;3891:14;4253:3;4246:10;;3532:730;;;3374:888;;;;:::o;4342:702::-;4473:3;4509:4;4504:3;4500:14;4604:4;4597:5;4593:16;4587:23;4623:63;4680:4;4675:3;4671:14;4657:12;4623:63;:::i;:::-;4524:172;4780:4;4773:5;4769:16;4763:23;4833:3;4827:4;4823:14;4816:4;4811:3;4807:14;4800:38;4859:147;5001:4;4987:12;4859:147;:::i;:::-;4851:155;;4706:311;5034:4;5027:11;;4478:566;4342:702;;;;:::o;5050:397::-;5205:4;5243:2;5232:9;5228:18;5220:26;;5292:9;5286:4;5282:20;5278:1;5267:9;5263:17;5256:47;5320:120;5435:4;5426:6;5320:120;:::i;:::-;5312:128;;5050:397;;;;:::o;5453:180::-;5501:77;5498:1;5491:88;5598:4;5595:1;5588:15;5622:4;5619:1;5612:15;5639:180;5687:77;5684:1;5677:88;5784:4;5781:1;5774:15;5808:4;5805:1;5798:15;5825:191;5865:3;5884:20;5902:1;5884:20;:::i;:::-;5879:25;;5918:20;5936:1;5918:20;:::i;:::-;5913:25;;5961:1;5958;5954:9;5947:16;;5982:3;5979:1;5976:10;5973:36;;;5989:18;;:::i;:::-;5973:36;5825:191;;;;:::o;6022:194::-;6062:4;6082:20;6100:1;6082:20;:::i;:::-;6077:25;;6116:20;6134:1;6116:20;:::i;:::-;6111:25;;6160:1;6157;6153:9;6145:17;;6184:1;6178:4;6175:11;6172:37;;;6189:18;;:::i;:::-;6172:37;6022:194;;;;:::o;6222:180::-;6270:77;6267:1;6260:88;6367:4;6364:1;6357:15;6391:4;6388:1;6381:15;6408:185;6448:1;6465:20;6483:1;6465:20;:::i;:::-;6460:25;;6499:20;6517:1;6499:20;:::i;:::-;6494:25;;6538:1;6528:35;;6543:18;;:::i;:::-;6528:35;6585:1;6582;6578:9;6573:14;;6408:185;;;;:::o;6599:410::-;6639:7;6662:20;6680:1;6662:20;:::i;:::-;6657:25;;6696:20;6714:1;6696:20;:::i;:::-;6691:25;;6751:1;6748;6744:9;6773:30;6791:11;6773:30;:::i;:::-;6762:41;;6952:1;6943:7;6939:15;6936:1;6933:22;6913:1;6906:9;6886:83;6863:139;;6982:18;;:::i;:::-;6863:139;6647:362;6599:410;;;;:::o",
  "source": "// SPDX-License-Identifier: MIT\n// contracts/token.sol\n\npragma solidity >=0.8.0 <0.9.0;\n\n/**\n* @notice Stakeable is a contract who is ment to be inherited by other contract that wants Staking capabilities\n*/\ncontract Stackable {\n\n    /**\n    * @notice Constructor,since this contract is not ment to be used without inheritance\n    * push once to stakeholders for it to work proplerly\n    */\n    constructor() {\n        // this push is needed so we avoid index 0 causing bug of index -1\n        stakeholders.push();\n\n    }\n    /**\n    * @notice\n    * A stake struct is used to represent the way we store stakes, \n    * A Stake will contain the users address, the amount staked and a timestamp, \n    * Since which is when the stake was made\n    */\n    struct Stake{\n        address user;\n        uint256 amount;\n        uint256 since;\n        // This claimable field is new and used to tell how big of a reward is currently available\n        uint256 claimable;\n    }\n    /**\n    * @notice Stakeholder is a staker that has active stakes\n    */\n    struct Stakeholder{\n        address user;\n        Stake[] address_stakes;\n    }\n\n    /**\n    * @notice\n    * StakingSummary is a struct that is used to contain all stakes performed by a certain account\n    */ \n    struct StakingSummary{\n        uint256 total_amount;\n        Stake[] stakes;\n    }\n\n    /**\n    * @notice \n    *   This is a array where we store all Stakes that are performed on the Contract\n    *   The stakes for each address are stored at a certain index, the index can be found using the stakes mapping\n    */\n    Stakeholder[] internal stakeholders;\n    /**\n    * @notice \n    * stakes is used to keep track of the INDEX for the stakers in the stakes array\n    */\n    mapping(address => uint256) internal stakes;\n    /**\n    * @notice Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable\n    */\n    event Staked(address indexed user, uint256 amount, uint256 index, uint256 timestamp);\n\n    /**\n    * @notice _addStakeholder takes care of adding a new stakeholder to the stakeholders array\n    */\n    function _addStakeholder(address stacker) internal returns (uint256) {\n        // push an empty Stakeholder struct to the stakeholders array\n        stakeholders.push();\n        // calculate the index of the last item in the array by subtracting 1 from the length\n        uint256 userIndex = stakeholders.length - 1;\n        // set the address to the new index\n        stakeholders[userIndex].user = stacker;\n        // add index to the stackeholders\n        stakes[stacker] = userIndex;\n\n        return userIndex;\n    }\n\n    /**\n    * @notice\n    * _Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container\n    * StakeID \n    */\n    function _stake(uint256 _amount) internal {\n        // check if the amount is greater than 0\n        require(_amount > 0, \"Stakeable: Amount must be greater than 0\");\n\n        uint256 userIndex = stakes[msg.sender];\n        uint256 timestamp = block.timestamp;\n\n        if (userIndex == 0) {\n            userIndex = _addStakeholder(msg.sender);\n        }\n\n        stakeholders[userIndex].address_stakes.push(Stake(msg.sender, _amount, timestamp,0));\n\n        emit Staked(msg.sender, _amount, userIndex, timestamp);\n    }\n\n    /**\n    * @notice\n    * rewardPerHour is 1000 because it is used to represent 0.001, since we only use integer numbers\n    * This will give users 0.1% reward for each staked token / H\n    */\n    uint256 internal rewardPerHour = 1000;\n\n    /**\n    * @notice\n    * calculateStakeReward is used to calculate how much a user should be rewarded for their stakes\n    * and the duration the stake has been active\n    */\n    function calculateStakeReward(Stake memory _current_stake) internal view returns (uint256){\n        // First calculate how long the stake has been active\n        // Use current seconds since epoch - the seconds since epoch the stake was made\n        // The output will be duration in SECONDS ,\n        // We will reward the user 0.1% per Hour So thats 0.1% per 3600 seconds\n        // the alghoritm is  seconds = block.timestamp - stake seconds (block.timestap - _stake.since)\n        // hours = Seconds / 3600 (seconds /3600) 3600 is an variable in Solidity names hours\n        // we then multiply each token by the hours staked , then divide by the rewardPerHour rate \n        return (((block.timestamp - _current_stake.since) / 1 hours) * _current_stake.amount) / rewardPerHour;\n    }\n\n    /**\n    * @notice\n    * withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake\n    * Notice index of the stake is the users stake counter, starting at 0 for the first stake\n    * Will return the amount to MINT onto the acount\n    * Will also calculateStakeReward and reset timer\n    */\n    function _withdrawStake(uint256 amount, uint256 index) internal returns (uint256) {\n        // Grab user_index which is the index to use to grab the Stake[]\n        uint256 user_index = stakes[msg.sender];\n        Stake memory current_stake = stakeholders[user_index].address_stakes[index];\n        require(current_stake.amount >= amount, \"Staking: Cannot withdraw more than you have staked\");\n\n        // Calculate available Reward first before we start modifying data\n        uint256 reward = calculateStakeReward(current_stake);\n        // Remove by subtracting the money unstaked \n        current_stake.amount = current_stake.amount - amount;\n        // If stake is empty, 0, then remove it from the array of stakes\n        if (current_stake.amount == 0) {\n            delete stakeholders[user_index].address_stakes[index];\n        } else {\n            // If not empty then replace the value of it\n            stakeholders[user_index].address_stakes[index].amount = current_stake.amount;\n            // Reset timer of stake\n            stakeholders[user_index].address_stakes[index].since = block.timestamp;\n        }\n\n        return amount+reward;\n    }\n\n    /**\n    * @notice\n    * hasStake is used to check if a account has stakes and the total amount along with all the seperate stakes\n    */\n    function hasStake(address _staker) public view returns (StakingSummary memory) {\n        // totalStakeAmount is used to count total staked amount of the address\n        uint256 totalStakeAmount; \n        // Keep a summary in memory since we need to calculate this\n        StakingSummary memory summary = StakingSummary(0, stakeholders[stakes[_staker]].address_stakes);\n        // Itterate all stakes and grab amount of stakes\n        for (uint256 s = 0; s < summary.stakes.length; s += 1) {\n            uint256 availableReward = calculateStakeReward(summary.stakes[s]);\n            summary.stakes[s].claimable = availableReward;\n            totalStakeAmount = totalStakeAmount + summary.stakes[s].amount;\n        }\n        // Assign calculate amount to summary\n        summary.total_amount = totalStakeAmount;\n        return summary;\n    }\n}",
  "sourcePath": "/Users/gabrielknies/Desktop/Epitech/EIP/coin/contracts/stackable.sol",
  "ast": {
    "absolutePath": "project:/contracts/stackable.sol",
    "exportedSymbols": {
      "Stackable": [
        473
      ]
    },
    "id": 474,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 122,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0",
          "<",
          "0.9",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "56:31:5"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Stackable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 123,
          "nodeType": "StructuredDocumentation",
          "src": "89:118:5",
          "text": " @notice Stakeable is a contract who is ment to be inherited by other contract that wants Staking capabilities"
        },
        "fullyImplemented": true,
        "id": 473,
        "linearizedBaseContracts": [
          473
        ],
        "name": "Stackable",
        "nameLocation": "217:9:5",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 132,
              "nodeType": "Block",
              "src": "409:112:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 127,
                        "name": "stakeholders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "494:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Stakeholder_$149_storage_$dyn_storage",
                          "typeString": "struct Stackable.Stakeholder storage ref[] storage ref"
                        }
                      },
                      "id": 129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "507:4:5",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "494:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Stakeholder_$149_storage_$dyn_storage_ptr_$returns$_t_struct$_Stakeholder_$149_storage_$attached_to$_t_array$_t_struct$_Stakeholder_$149_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Stackable.Stakeholder storage ref[] storage pointer) returns (struct Stackable.Stakeholder storage ref)"
                      }
                    },
                    "id": 130,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "494:19:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stakeholder_$149_storage",
                      "typeString": "struct Stackable.Stakeholder storage ref"
                    }
                  },
                  "id": 131,
                  "nodeType": "ExpressionStatement",
                  "src": "494:19:5"
                }
              ]
            },
            "documentation": {
              "id": 124,
              "nodeType": "StructuredDocumentation",
              "src": "234:156:5",
              "text": " @notice Constructor,since this contract is not ment to be used without inheritance\n push once to stakeholders for it to work proplerly"
            },
            "id": 133,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "406:2:5"
            },
            "returnParameters": {
              "id": 126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "409:0:5"
            },
            "scope": 473,
            "src": "395:126:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "canonicalName": "Stackable.Stake",
            "id": 142,
            "members": [
              {
                "constant": false,
                "id": 135,
                "mutability": "mutable",
                "name": "user",
                "nameLocation": "780:4:5",
                "nodeType": "VariableDeclaration",
                "scope": 142,
                "src": "772:12:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 134,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "772:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 137,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "802:6:5",
                "nodeType": "VariableDeclaration",
                "scope": 142,
                "src": "794:14:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 136,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "794:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 139,
                "mutability": "mutable",
                "name": "since",
                "nameLocation": "826:5:5",
                "nodeType": "VariableDeclaration",
                "scope": 142,
                "src": "818:13:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 138,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "818:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 141,
                "mutability": "mutable",
                "name": "claimable",
                "nameLocation": "948:9:5",
                "nodeType": "VariableDeclaration",
                "scope": 142,
                "src": "940:17:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 140,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "940:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Stake",
            "nameLocation": "757:5:5",
            "nodeType": "StructDefinition",
            "scope": 473,
            "src": "750:214:5",
            "visibility": "public"
          },
          {
            "canonicalName": "Stackable.Stakeholder",
            "id": 149,
            "members": [
              {
                "constant": false,
                "id": 144,
                "mutability": "mutable",
                "name": "user",
                "nameLocation": "1081:4:5",
                "nodeType": "VariableDeclaration",
                "scope": 149,
                "src": "1073:12:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 143,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1073:7:5",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 148,
                "mutability": "mutable",
                "name": "address_stakes",
                "nameLocation": "1103:14:5",
                "nodeType": "VariableDeclaration",
                "scope": 149,
                "src": "1095:22:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Stake_$142_storage_$dyn_storage_ptr",
                  "typeString": "struct Stackable.Stake[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 146,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 145,
                      "name": "Stake",
                      "nameLocations": [
                        "1095:5:5"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 142,
                      "src": "1095:5:5"
                    },
                    "referencedDeclaration": 142,
                    "src": "1095:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$142_storage_ptr",
                      "typeString": "struct Stackable.Stake"
                    }
                  },
                  "id": 147,
                  "nodeType": "ArrayTypeName",
                  "src": "1095:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Stake_$142_storage_$dyn_storage_ptr",
                    "typeString": "struct Stackable.Stake[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Stakeholder",
            "nameLocation": "1052:11:5",
            "nodeType": "StructDefinition",
            "scope": 473,
            "src": "1045:79:5",
            "visibility": "public"
          },
          {
            "canonicalName": "Stackable.StakingSummary",
            "id": 156,
            "members": [
              {
                "constant": false,
                "id": 151,
                "mutability": "mutable",
                "name": "total_amount",
                "nameLocation": "1298:12:5",
                "nodeType": "VariableDeclaration",
                "scope": 156,
                "src": "1290:20:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 150,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1290:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 155,
                "mutability": "mutable",
                "name": "stakes",
                "nameLocation": "1328:6:5",
                "nodeType": "VariableDeclaration",
                "scope": 156,
                "src": "1320:14:5",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_Stake_$142_storage_$dyn_storage_ptr",
                  "typeString": "struct Stackable.Stake[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 153,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 152,
                      "name": "Stake",
                      "nameLocations": [
                        "1320:5:5"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 142,
                      "src": "1320:5:5"
                    },
                    "referencedDeclaration": 142,
                    "src": "1320:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$142_storage_ptr",
                      "typeString": "struct Stackable.Stake"
                    }
                  },
                  "id": 154,
                  "nodeType": "ArrayTypeName",
                  "src": "1320:7:5",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Stake_$142_storage_$dyn_storage_ptr",
                    "typeString": "struct Stackable.Stake[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "StakingSummary",
            "nameLocation": "1266:14:5",
            "nodeType": "StructDefinition",
            "scope": 473,
            "src": "1259:82:5",
            "visibility": "public"
          },
          {
            "constant": false,
            "documentation": {
              "id": 157,
              "nodeType": "StructuredDocumentation",
              "src": "1347:225:5",
              "text": " @notice \n   This is a array where we store all Stakes that are performed on the Contract\n   The stakes for each address are stored at a certain index, the index can be found using the stakes mapping"
            },
            "id": 161,
            "mutability": "mutable",
            "name": "stakeholders",
            "nameLocation": "1600:12:5",
            "nodeType": "VariableDeclaration",
            "scope": 473,
            "src": "1577:35:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Stakeholder_$149_storage_$dyn_storage",
              "typeString": "struct Stackable.Stakeholder[]"
            },
            "typeName": {
              "baseType": {
                "id": 159,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 158,
                  "name": "Stakeholder",
                  "nameLocations": [
                    "1577:11:5"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 149,
                  "src": "1577:11:5"
                },
                "referencedDeclaration": 149,
                "src": "1577:11:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Stakeholder_$149_storage_ptr",
                  "typeString": "struct Stackable.Stakeholder"
                }
              },
              "id": 160,
              "nodeType": "ArrayTypeName",
              "src": "1577:13:5",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Stakeholder_$149_storage_$dyn_storage_ptr",
                "typeString": "struct Stackable.Stakeholder[]"
              }
            },
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 162,
              "nodeType": "StructuredDocumentation",
              "src": "1618:109:5",
              "text": " @notice \n stakes is used to keep track of the INDEX for the stakers in the stakes array"
            },
            "id": 166,
            "mutability": "mutable",
            "name": "stakes",
            "nameLocation": "1769:6:5",
            "nodeType": "VariableDeclaration",
            "scope": 473,
            "src": "1732:43:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 165,
              "keyName": "",
              "keyNameLocation": "-1:-1:-1",
              "keyType": {
                "id": 163,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1740:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1732:27:5",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 164,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1751:7:5",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "internal"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 167,
              "nodeType": "StructuredDocumentation",
              "src": "1781:122:5",
              "text": " @notice Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
            },
            "eventSelector": "b4caaf29adda3eefee3ad552a8e85058589bf834c7466cae4ee58787f70589ed",
            "id": 177,
            "name": "Staked",
            "nameLocation": "1914:6:5",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 169,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "1937:4:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "1921:20:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1921:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 171,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1951:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "1943:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 170,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1943:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 173,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "1967:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "1959:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 172,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1959:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 175,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1982:9:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 177,
                  "src": "1974:17:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1974:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1920:72:5"
            },
            "src": "1908:85:5"
          },
          {
            "body": {
              "id": 212,
              "nodeType": "Block",
              "src": "2178:451:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 185,
                        "name": "stakeholders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "2258:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Stakeholder_$149_storage_$dyn_storage",
                          "typeString": "struct Stackable.Stakeholder storage ref[] storage ref"
                        }
                      },
                      "id": 187,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2271:4:5",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "2258:17:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Stakeholder_$149_storage_$dyn_storage_ptr_$returns$_t_struct$_Stakeholder_$149_storage_$attached_to$_t_array$_t_struct$_Stakeholder_$149_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Stackable.Stakeholder storage ref[] storage pointer) returns (struct Stackable.Stakeholder storage ref)"
                      }
                    },
                    "id": 188,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2258:19:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stakeholder_$149_storage",
                      "typeString": "struct Stackable.Stakeholder storage ref"
                    }
                  },
                  "id": 189,
                  "nodeType": "ExpressionStatement",
                  "src": "2258:19:5"
                },
                {
                  "assignments": [
                    191
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 191,
                      "mutability": "mutable",
                      "name": "userIndex",
                      "nameLocation": "2389:9:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 212,
                      "src": "2381:17:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 190,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2381:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 196,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 192,
                        "name": "stakeholders",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 161,
                        "src": "2401:12:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Stakeholder_$149_storage_$dyn_storage",
                          "typeString": "struct Stackable.Stakeholder storage ref[] storage ref"
                        }
                      },
                      "id": 193,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "2414:6:5",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2401:19:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "-",
                    "rightExpression": {
                      "hexValue": "31",
                      "id": 194,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2423:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "2401:23:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2381:43:5"
                },
                {
                  "expression": {
                    "id": 202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 197,
                          "name": "stakeholders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 161,
                          "src": "2478:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Stakeholder_$149_storage_$dyn_storage",
                            "typeString": "struct Stackable.Stakeholder storage ref[] storage ref"
                          }
                        },
                        "id": 199,
                        "indexExpression": {
                          "id": 198,
                          "name": "userIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 191,
                          "src": "2491:9:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2478:23:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stakeholder_$149_storage",
                          "typeString": "struct Stackable.Stakeholder storage ref"
                        }
                      },
                      "id": 200,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "2502:4:5",
                      "memberName": "user",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 144,
                      "src": "2478:28:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 201,
                      "name": "stacker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 180,
                      "src": "2509:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2478:38:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 203,
                  "nodeType": "ExpressionStatement",
                  "src": "2478:38:5"
                },
                {
                  "expression": {
                    "id": 208,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 204,
                        "name": "stakes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 166,
                        "src": "2568:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 206,
                      "indexExpression": {
                        "id": 205,
                        "name": "stacker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 180,
                        "src": "2575:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2568:15:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 207,
                      "name": "userIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 191,
                      "src": "2586:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2568:27:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 209,
                  "nodeType": "ExpressionStatement",
                  "src": "2568:27:5"
                },
                {
                  "expression": {
                    "id": 210,
                    "name": "userIndex",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 191,
                    "src": "2613:9:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 184,
                  "id": 211,
                  "nodeType": "Return",
                  "src": "2606:16:5"
                }
              ]
            },
            "documentation": {
              "id": 178,
              "nodeType": "StructuredDocumentation",
              "src": "1999:105:5",
              "text": " @notice _addStakeholder takes care of adding a new stakeholder to the stakeholders array"
            },
            "id": 213,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addStakeholder",
            "nameLocation": "2118:15:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 180,
                  "mutability": "mutable",
                  "name": "stacker",
                  "nameLocation": "2142:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "2134:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 179,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2134:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2133:17:5"
            },
            "returnParameters": {
              "id": 184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 183,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 213,
                  "src": "2169:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 182,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2169:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2168:9:5"
            },
            "scope": 473,
            "src": "2109:520:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 272,
              "nodeType": "Block",
              "src": "2879:478:5",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 222,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 220,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 216,
                          "src": "2946:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 221,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2956:1:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2946:11:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b6561626c653a20416d6f756e74206d7573742062652067726561746572207468616e2030",
                        "id": 223,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2959:42:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_08257cc716c7a8611daaf87b01517d1594b7d75563c9ff5a71b7f19d2057e36f",
                          "typeString": "literal_string \"Stakeable: Amount must be greater than 0\""
                        },
                        "value": "Stakeable: Amount must be greater than 0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_08257cc716c7a8611daaf87b01517d1594b7d75563c9ff5a71b7f19d2057e36f",
                          "typeString": "literal_string \"Stakeable: Amount must be greater than 0\""
                        }
                      ],
                      "id": 219,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2938:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2938:64:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 225,
                  "nodeType": "ExpressionStatement",
                  "src": "2938:64:5"
                },
                {
                  "assignments": [
                    227
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 227,
                      "mutability": "mutable",
                      "name": "userIndex",
                      "nameLocation": "3021:9:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 272,
                      "src": "3013:17:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 226,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3013:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 232,
                  "initialValue": {
                    "baseExpression": {
                      "id": 228,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "3033:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 231,
                    "indexExpression": {
                      "expression": {
                        "id": 229,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "3040:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 230,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3044:6:5",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "3040:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "3033:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3013:38:5"
                },
                {
                  "assignments": [
                    234
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 234,
                      "mutability": "mutable",
                      "name": "timestamp",
                      "nameLocation": "3069:9:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 272,
                      "src": "3061:17:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 233,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "3061:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 237,
                  "initialValue": {
                    "expression": {
                      "id": 235,
                      "name": "block",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 4294967292,
                      "src": "3081:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_block",
                        "typeString": "block"
                      }
                    },
                    "id": 236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberLocation": "3087:9:5",
                    "memberName": "timestamp",
                    "nodeType": "MemberAccess",
                    "src": "3081:15:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3061:35:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 238,
                      "name": "userIndex",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 227,
                      "src": "3111:9:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 239,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3124:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "3111:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 249,
                  "nodeType": "IfStatement",
                  "src": "3107:84:5",
                  "trueBody": {
                    "id": 248,
                    "nodeType": "Block",
                    "src": "3127:64:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 246,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 241,
                            "name": "userIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 227,
                            "src": "3141:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 243,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 4294967281,
                                  "src": "3169:3:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 244,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "3173:6:5",
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "3169:10:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 242,
                              "name": "_addStakeholder",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 213,
                              "src": "3153:15:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$_t_uint256_$",
                                "typeString": "function (address) returns (uint256)"
                              }
                            },
                            "id": 245,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3153:27:5",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3141:39:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 247,
                        "nodeType": "ExpressionStatement",
                        "src": "3141:39:5"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 256,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967281,
                              "src": "3251:3:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 257,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "3255:6:5",
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "3251:10:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 258,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 216,
                            "src": "3263:7:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 259,
                            "name": "timestamp",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 234,
                            "src": "3272:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "hexValue": "30",
                            "id": 260,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3282:1:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 255,
                          "name": "Stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 142,
                          "src": "3245:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_Stake_$142_storage_ptr_$",
                            "typeString": "type(struct Stackable.Stake storage pointer)"
                          }
                        },
                        "id": 261,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3245:39:5",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$142_memory_ptr",
                          "typeString": "struct Stackable.Stake memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Stake_$142_memory_ptr",
                          "typeString": "struct Stackable.Stake memory"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "baseExpression": {
                            "id": 250,
                            "name": "stakeholders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "3201:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Stakeholder_$149_storage_$dyn_storage",
                              "typeString": "struct Stackable.Stakeholder storage ref[] storage ref"
                            }
                          },
                          "id": 252,
                          "indexExpression": {
                            "id": 251,
                            "name": "userIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 227,
                            "src": "3214:9:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3201:23:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stakeholder_$149_storage",
                            "typeString": "struct Stackable.Stakeholder storage ref"
                          }
                        },
                        "id": 253,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3225:14:5",
                        "memberName": "address_stakes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 148,
                        "src": "3201:38:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Stake_$142_storage_$dyn_storage",
                          "typeString": "struct Stackable.Stake storage ref[] storage ref"
                        }
                      },
                      "id": 254,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3240:4:5",
                      "memberName": "push",
                      "nodeType": "MemberAccess",
                      "src": "3201:43:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Stake_$142_storage_$dyn_storage_ptr_$_t_struct$_Stake_$142_storage_$returns$__$attached_to$_t_array$_t_struct$_Stake_$142_storage_$dyn_storage_ptr_$",
                        "typeString": "function (struct Stackable.Stake storage ref[] storage pointer,struct Stackable.Stake storage ref)"
                      }
                    },
                    "id": 262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3201:84:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 263,
                  "nodeType": "ExpressionStatement",
                  "src": "3201:84:5"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 265,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 4294967281,
                          "src": "3308:3:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 266,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "3312:6:5",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3308:10:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 267,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 216,
                        "src": "3320:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 268,
                        "name": "userIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 227,
                        "src": "3329:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 269,
                        "name": "timestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 234,
                        "src": "3340:9:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 264,
                      "name": "Staked",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 177,
                      "src": "3301:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256,uint256,uint256)"
                      }
                    },
                    "id": 270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3301:49:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 271,
                  "nodeType": "EmitStatement",
                  "src": "3296:54:5"
                }
              ]
            },
            "documentation": {
              "id": 214,
              "nodeType": "StructuredDocumentation",
              "src": "2635:197:5",
              "text": " @notice\n _Stake is used to make a stake for an sender. It will remove the amount staked from the stakers account and place those tokens inside a stake container\n StakeID "
            },
            "id": 273,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_stake",
            "nameLocation": "2846:6:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 217,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 216,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2861:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 273,
                  "src": "2853:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 215,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2853:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2852:17:5"
            },
            "returnParameters": {
              "id": 218,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2879:0:5"
            },
            "scope": 473,
            "src": "2837:520:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "constant": false,
            "documentation": {
              "id": 274,
              "nodeType": "StructuredDocumentation",
              "src": "3363:190:5",
              "text": " @notice\n rewardPerHour is 1000 because it is used to represent 0.001, since we only use integer numbers\n This will give users 0.1% reward for each staked token / H"
            },
            "id": 277,
            "mutability": "mutable",
            "name": "rewardPerHour",
            "nameLocation": "3575:13:5",
            "nodeType": "VariableDeclaration",
            "scope": 473,
            "src": "3558:37:5",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 275,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3558:7:5",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "31303030",
              "id": 276,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "3591:4:5",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000_by_1",
                "typeString": "int_const 1000"
              },
              "value": "1000"
            },
            "visibility": "internal"
          },
          {
            "body": {
              "id": 302,
              "nodeType": "Block",
              "src": "3870:697:5",
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 300,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "components": [
                        {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 297,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "components": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 293,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 290,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "expression": {
                                          "id": 286,
                                          "name": "block",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 4294967292,
                                          "src": "4469:5:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_block",
                                            "typeString": "block"
                                          }
                                        },
                                        "id": 287,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "4475:9:5",
                                        "memberName": "timestamp",
                                        "nodeType": "MemberAccess",
                                        "src": "4469:15:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "expression": {
                                          "id": 288,
                                          "name": "_current_stake",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 281,
                                          "src": "4487:14:5",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Stake_$142_memory_ptr",
                                            "typeString": "struct Stackable.Stake memory"
                                          }
                                        },
                                        "id": 289,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberLocation": "4502:5:5",
                                        "memberName": "since",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 139,
                                        "src": "4487:20:5",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "4469:38:5",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 291,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "4468:40:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "/",
                                "rightExpression": {
                                  "hexValue": "31",
                                  "id": 292,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "4511:7:5",
                                  "subdenomination": "hours",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_3600_by_1",
                                    "typeString": "int_const 3600"
                                  },
                                  "value": "1"
                                },
                                "src": "4468:50:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "id": 294,
                            "isConstant": false,
                            "isInlineArray": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "TupleExpression",
                            "src": "4467:52:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "expression": {
                              "id": 295,
                              "name": "_current_stake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 281,
                              "src": "4522:14:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$142_memory_ptr",
                                "typeString": "struct Stackable.Stake memory"
                              }
                            },
                            "id": 296,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "4537:6:5",
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 137,
                            "src": "4522:21:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4467:76:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "id": 298,
                      "isConstant": false,
                      "isInlineArray": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "TupleExpression",
                      "src": "4466:78:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "/",
                    "rightExpression": {
                      "id": 299,
                      "name": "rewardPerHour",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 277,
                      "src": "4547:13:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4466:94:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 285,
                  "id": 301,
                  "nodeType": "Return",
                  "src": "4459:101:5"
                }
              ]
            },
            "documentation": {
              "id": 278,
              "nodeType": "StructuredDocumentation",
              "src": "3602:173:5",
              "text": " @notice\n calculateStakeReward is used to calculate how much a user should be rewarded for their stakes\n and the duration the stake has been active"
            },
            "id": 303,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateStakeReward",
            "nameLocation": "3789:20:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 281,
                  "mutability": "mutable",
                  "name": "_current_stake",
                  "nameLocation": "3823:14:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 303,
                  "src": "3810:27:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Stake_$142_memory_ptr",
                    "typeString": "struct Stackable.Stake"
                  },
                  "typeName": {
                    "id": 280,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 279,
                      "name": "Stake",
                      "nameLocations": [
                        "3810:5:5"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 142,
                      "src": "3810:5:5"
                    },
                    "referencedDeclaration": 142,
                    "src": "3810:5:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$142_storage_ptr",
                      "typeString": "struct Stackable.Stake"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3809:29:5"
            },
            "returnParameters": {
              "id": 285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 284,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 303,
                  "src": "3862:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 283,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3862:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3861:9:5"
            },
            "scope": 473,
            "src": "3780:787:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 394,
              "nodeType": "Block",
              "src": "4987:1076:5",
              "statements": [
                {
                  "assignments": [
                    314
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 314,
                      "mutability": "mutable",
                      "name": "user_index",
                      "nameLocation": "5078:10:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 394,
                      "src": "5070:18:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 313,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5070:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 319,
                  "initialValue": {
                    "baseExpression": {
                      "id": 315,
                      "name": "stakes",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 166,
                      "src": "5091:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 318,
                    "indexExpression": {
                      "expression": {
                        "id": 316,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 4294967281,
                        "src": "5098:3:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5102:6:5",
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "5098:10:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5091:18:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5070:39:5"
                },
                {
                  "assignments": [
                    322
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 322,
                      "mutability": "mutable",
                      "name": "current_stake",
                      "nameLocation": "5132:13:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 394,
                      "src": "5119:26:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Stake_$142_memory_ptr",
                        "typeString": "struct Stackable.Stake"
                      },
                      "typeName": {
                        "id": 321,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 320,
                          "name": "Stake",
                          "nameLocations": [
                            "5119:5:5"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 142,
                          "src": "5119:5:5"
                        },
                        "referencedDeclaration": 142,
                        "src": "5119:5:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$142_storage_ptr",
                          "typeString": "struct Stackable.Stake"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 329,
                  "initialValue": {
                    "baseExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 323,
                          "name": "stakeholders",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 161,
                          "src": "5148:12:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Stakeholder_$149_storage_$dyn_storage",
                            "typeString": "struct Stackable.Stakeholder storage ref[] storage ref"
                          }
                        },
                        "id": 325,
                        "indexExpression": {
                          "id": 324,
                          "name": "user_index",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 314,
                          "src": "5161:10:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5148:24:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stakeholder_$149_storage",
                          "typeString": "struct Stackable.Stakeholder storage ref"
                        }
                      },
                      "id": 326,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5173:14:5",
                      "memberName": "address_stakes",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 148,
                      "src": "5148:39:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Stake_$142_storage_$dyn_storage",
                        "typeString": "struct Stackable.Stake storage ref[] storage ref"
                      }
                    },
                    "id": 328,
                    "indexExpression": {
                      "id": 327,
                      "name": "index",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 308,
                      "src": "5188:5:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "5148:46:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Stake_$142_storage",
                      "typeString": "struct Stackable.Stake storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5119:75:5"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 334,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 331,
                            "name": "current_stake",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 322,
                            "src": "5212:13:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$142_memory_ptr",
                              "typeString": "struct Stackable.Stake memory"
                            }
                          },
                          "id": 332,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "5226:6:5",
                          "memberName": "amount",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 137,
                          "src": "5212:20:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "id": 333,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 306,
                          "src": "5236:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "5212:30:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616b696e673a2043616e6e6f74207769746864726177206d6f7265207468616e20796f752068617665207374616b6564",
                        "id": 335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5244:52:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ee4d510ac6284dd4e6c153f8559b79fe87c2ac83701222cefa2b5a94cc595d9a",
                          "typeString": "literal_string \"Staking: Cannot withdraw more than you have staked\""
                        },
                        "value": "Staking: Cannot withdraw more than you have staked"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ee4d510ac6284dd4e6c153f8559b79fe87c2ac83701222cefa2b5a94cc595d9a",
                          "typeString": "literal_string \"Staking: Cannot withdraw more than you have staked\""
                        }
                      ],
                      "id": 330,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "5204:7:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5204:93:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 337,
                  "nodeType": "ExpressionStatement",
                  "src": "5204:93:5"
                },
                {
                  "assignments": [
                    339
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 339,
                      "mutability": "mutable",
                      "name": "reward",
                      "nameLocation": "5391:6:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 394,
                      "src": "5383:14:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 338,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "5383:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 343,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 341,
                        "name": "current_stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 322,
                        "src": "5421:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$142_memory_ptr",
                          "typeString": "struct Stackable.Stake memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_Stake_$142_memory_ptr",
                          "typeString": "struct Stackable.Stake memory"
                        }
                      ],
                      "id": 340,
                      "name": "calculateStakeReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 303,
                      "src": "5400:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$142_memory_ptr_$returns$_t_uint256_$",
                        "typeString": "function (struct Stackable.Stake memory) view returns (uint256)"
                      }
                    },
                    "id": 342,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5400:35:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5383:52:5"
                },
                {
                  "expression": {
                    "id": 351,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 344,
                        "name": "current_stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 322,
                        "src": "5498:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$142_memory_ptr",
                          "typeString": "struct Stackable.Stake memory"
                        }
                      },
                      "id": 346,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "5512:6:5",
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 137,
                      "src": "5498:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 350,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 347,
                          "name": "current_stake",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 322,
                          "src": "5521:13:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stake_$142_memory_ptr",
                            "typeString": "struct Stackable.Stake memory"
                          }
                        },
                        "id": 348,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "5535:6:5",
                        "memberName": "amount",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 137,
                        "src": "5521:20:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "-",
                      "rightExpression": {
                        "id": 349,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 306,
                        "src": "5544:6:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "5521:29:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5498:52:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 352,
                  "nodeType": "ExpressionStatement",
                  "src": "5498:52:5"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 353,
                        "name": "current_stake",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 322,
                        "src": "5637:13:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Stake_$142_memory_ptr",
                          "typeString": "struct Stackable.Stake memory"
                        }
                      },
                      "id": 354,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "5651:6:5",
                      "memberName": "amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 137,
                      "src": "5637:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 355,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5661:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "5637:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 388,
                    "nodeType": "Block",
                    "src": "5748:278:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 366,
                                    "name": "stakeholders",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 161,
                                    "src": "5819:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Stakeholder_$149_storage_$dyn_storage",
                                      "typeString": "struct Stackable.Stakeholder storage ref[] storage ref"
                                    }
                                  },
                                  "id": 368,
                                  "indexExpression": {
                                    "id": 367,
                                    "name": "user_index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 314,
                                    "src": "5832:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5819:24:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Stakeholder_$149_storage",
                                    "typeString": "struct Stackable.Stakeholder storage ref"
                                  }
                                },
                                "id": 369,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5844:14:5",
                                "memberName": "address_stakes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 148,
                                "src": "5819:39:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Stake_$142_storage_$dyn_storage",
                                  "typeString": "struct Stackable.Stake storage ref[] storage ref"
                                }
                              },
                              "id": 371,
                              "indexExpression": {
                                "id": 370,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 308,
                                "src": "5859:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5819:46:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$142_storage",
                                "typeString": "struct Stackable.Stake storage ref"
                              }
                            },
                            "id": 372,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5866:6:5",
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 137,
                            "src": "5819:53:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 373,
                              "name": "current_stake",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 322,
                              "src": "5875:13:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$142_memory_ptr",
                                "typeString": "struct Stackable.Stake memory"
                              }
                            },
                            "id": 374,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "5889:6:5",
                            "memberName": "amount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 137,
                            "src": "5875:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5819:76:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 376,
                        "nodeType": "ExpressionStatement",
                        "src": "5819:76:5"
                      },
                      {
                        "expression": {
                          "id": 386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 377,
                                    "name": "stakeholders",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 161,
                                    "src": "5945:12:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Stakeholder_$149_storage_$dyn_storage",
                                      "typeString": "struct Stackable.Stakeholder storage ref[] storage ref"
                                    }
                                  },
                                  "id": 379,
                                  "indexExpression": {
                                    "id": 378,
                                    "name": "user_index",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 314,
                                    "src": "5958:10:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5945:24:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Stakeholder_$149_storage",
                                    "typeString": "struct Stackable.Stakeholder storage ref"
                                  }
                                },
                                "id": 380,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "5970:14:5",
                                "memberName": "address_stakes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 148,
                                "src": "5945:39:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Stake_$142_storage_$dyn_storage",
                                  "typeString": "struct Stackable.Stake storage ref[] storage ref"
                                }
                              },
                              "id": 382,
                              "indexExpression": {
                                "id": 381,
                                "name": "index",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 308,
                                "src": "5985:5:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5945:46:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$142_storage",
                                "typeString": "struct Stackable.Stake storage ref"
                              }
                            },
                            "id": 383,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "5992:5:5",
                            "memberName": "since",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 139,
                            "src": "5945:52:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 384,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 4294967292,
                              "src": "6000:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 385,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "6006:9:5",
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "6000:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "5945:70:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 387,
                        "nodeType": "ExpressionStatement",
                        "src": "5945:70:5"
                      }
                    ]
                  },
                  "id": 389,
                  "nodeType": "IfStatement",
                  "src": "5633:393:5",
                  "trueBody": {
                    "id": 365,
                    "nodeType": "Block",
                    "src": "5664:78:5",
                    "statements": [
                      {
                        "expression": {
                          "id": 363,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "5678:53:5",
                          "subExpression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 357,
                                  "name": "stakeholders",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 161,
                                  "src": "5685:12:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Stakeholder_$149_storage_$dyn_storage",
                                    "typeString": "struct Stackable.Stakeholder storage ref[] storage ref"
                                  }
                                },
                                "id": 359,
                                "indexExpression": {
                                  "id": 358,
                                  "name": "user_index",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 314,
                                  "src": "5698:10:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5685:24:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stakeholder_$149_storage",
                                  "typeString": "struct Stackable.Stakeholder storage ref"
                                }
                              },
                              "id": 360,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "5710:14:5",
                              "memberName": "address_stakes",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 148,
                              "src": "5685:39:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Stake_$142_storage_$dyn_storage",
                                "typeString": "struct Stackable.Stake storage ref[] storage ref"
                              }
                            },
                            "id": 362,
                            "indexExpression": {
                              "id": 361,
                              "name": "index",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 308,
                              "src": "5725:5:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "5685:46:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Stake_$142_storage",
                              "typeString": "struct Stackable.Stake storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 364,
                        "nodeType": "ExpressionStatement",
                        "src": "5678:53:5"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 390,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 306,
                      "src": "6043:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "id": 391,
                      "name": "reward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 339,
                      "src": "6050:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6043:13:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 312,
                  "id": 393,
                  "nodeType": "Return",
                  "src": "6036:20:5"
                }
              ]
            },
            "documentation": {
              "id": 304,
              "nodeType": "StructuredDocumentation",
              "src": "4573:327:5",
              "text": " @notice\n withdrawStake takes in an amount and a index of the stake and will remove tokens from that stake\n Notice index of the stake is the users stake counter, starting at 0 for the first stake\n Will return the amount to MINT onto the acount\n Will also calculateStakeReward and reset timer"
            },
            "id": 395,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdrawStake",
            "nameLocation": "4914:14:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 309,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 306,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4937:6:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "4929:14:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 305,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4929:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 308,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "4953:5:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "4945:13:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 307,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4945:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4928:31:5"
            },
            "returnParameters": {
              "id": 312,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 311,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 395,
                  "src": "4978:7:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 310,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4978:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4977:9:5"
            },
            "scope": 473,
            "src": "4905:1158:5",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 471,
              "nodeType": "Block",
              "src": "6289:760:5",
              "statements": [
                {
                  "assignments": [
                    405
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 405,
                      "mutability": "mutable",
                      "name": "totalStakeAmount",
                      "nameLocation": "6387:16:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 471,
                      "src": "6379:24:5",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 404,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "6379:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 406,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6379:24:5"
                },
                {
                  "assignments": [
                    409
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 409,
                      "mutability": "mutable",
                      "name": "summary",
                      "nameLocation": "6504:7:5",
                      "nodeType": "VariableDeclaration",
                      "scope": 471,
                      "src": "6482:29:5",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_StakingSummary_$156_memory_ptr",
                        "typeString": "struct Stackable.StakingSummary"
                      },
                      "typeName": {
                        "id": 408,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 407,
                          "name": "StakingSummary",
                          "nameLocations": [
                            "6482:14:5"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 156,
                          "src": "6482:14:5"
                        },
                        "referencedDeclaration": 156,
                        "src": "6482:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingSummary_$156_storage_ptr",
                          "typeString": "struct Stackable.StakingSummary"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 419,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "30",
                        "id": 411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6529:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 412,
                            "name": "stakeholders",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 161,
                            "src": "6532:12:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Stakeholder_$149_storage_$dyn_storage",
                              "typeString": "struct Stackable.Stakeholder storage ref[] storage ref"
                            }
                          },
                          "id": 416,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 413,
                              "name": "stakes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 166,
                              "src": "6545:6:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 415,
                            "indexExpression": {
                              "id": 414,
                              "name": "_staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 398,
                              "src": "6552:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6545:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6532:29:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Stakeholder_$149_storage",
                            "typeString": "struct Stackable.Stakeholder storage ref"
                          }
                        },
                        "id": 417,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6562:14:5",
                        "memberName": "address_stakes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 148,
                        "src": "6532:44:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Stake_$142_storage_$dyn_storage",
                          "typeString": "struct Stackable.Stake storage ref[] storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_array$_t_struct$_Stake_$142_storage_$dyn_storage",
                          "typeString": "struct Stackable.Stake storage ref[] storage ref"
                        }
                      ],
                      "id": 410,
                      "name": "StakingSummary",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 156,
                      "src": "6514:14:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_StakingSummary_$156_storage_ptr_$",
                        "typeString": "type(struct Stackable.StakingSummary storage pointer)"
                      }
                    },
                    "id": 418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6514:63:5",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingSummary_$156_memory_ptr",
                      "typeString": "struct Stackable.StakingSummary memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6482:95:5"
                },
                {
                  "body": {
                    "id": 461,
                    "nodeType": "Block",
                    "src": "6699:225:5",
                    "statements": [
                      {
                        "assignments": [
                          434
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 434,
                            "mutability": "mutable",
                            "name": "availableReward",
                            "nameLocation": "6721:15:5",
                            "nodeType": "VariableDeclaration",
                            "scope": 461,
                            "src": "6713:23:5",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 433,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6713:7:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 441,
                        "initialValue": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 436,
                                  "name": "summary",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 409,
                                  "src": "6760:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StakingSummary_$156_memory_ptr",
                                    "typeString": "struct Stackable.StakingSummary memory"
                                  }
                                },
                                "id": 437,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6768:6:5",
                                "memberName": "stakes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 155,
                                "src": "6760:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Stake_$142_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct Stackable.Stake memory[] memory"
                                }
                              },
                              "id": 439,
                              "indexExpression": {
                                "id": 438,
                                "name": "s",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 421,
                                "src": "6775:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6760:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$142_memory_ptr",
                                "typeString": "struct Stackable.Stake memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_Stake_$142_memory_ptr",
                                "typeString": "struct Stackable.Stake memory"
                              }
                            ],
                            "id": 435,
                            "name": "calculateStakeReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 303,
                            "src": "6739:20:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_struct$_Stake_$142_memory_ptr_$returns$_t_uint256_$",
                              "typeString": "function (struct Stackable.Stake memory) view returns (uint256)"
                            }
                          },
                          "id": 440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6739:39:5",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6713:65:5"
                      },
                      {
                        "expression": {
                          "id": 449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "expression": {
                                  "id": 442,
                                  "name": "summary",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 409,
                                  "src": "6792:7:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_StakingSummary_$156_memory_ptr",
                                    "typeString": "struct Stackable.StakingSummary memory"
                                  }
                                },
                                "id": 445,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberLocation": "6800:6:5",
                                "memberName": "stakes",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 155,
                                "src": "6792:14:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_Stake_$142_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "struct Stackable.Stake memory[] memory"
                                }
                              },
                              "id": 446,
                              "indexExpression": {
                                "id": 444,
                                "name": "s",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 421,
                                "src": "6807:1:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "6792:17:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Stake_$142_memory_ptr",
                                "typeString": "struct Stackable.Stake memory"
                              }
                            },
                            "id": 447,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberLocation": "6810:9:5",
                            "memberName": "claimable",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 141,
                            "src": "6792:27:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 448,
                            "name": "availableReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 434,
                            "src": "6822:15:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6792:45:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 450,
                        "nodeType": "ExpressionStatement",
                        "src": "6792:45:5"
                      },
                      {
                        "expression": {
                          "id": 459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 451,
                            "name": "totalStakeAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 405,
                            "src": "6851:16:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 452,
                              "name": "totalStakeAmount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 405,
                              "src": "6870:16:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "expression": {
                                "baseExpression": {
                                  "expression": {
                                    "id": 453,
                                    "name": "summary",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 409,
                                    "src": "6889:7:5",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_StakingSummary_$156_memory_ptr",
                                      "typeString": "struct Stackable.StakingSummary memory"
                                    }
                                  },
                                  "id": 454,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberLocation": "6897:6:5",
                                  "memberName": "stakes",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 155,
                                  "src": "6889:14:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_Stake_$142_memory_ptr_$dyn_memory_ptr",
                                    "typeString": "struct Stackable.Stake memory[] memory"
                                  }
                                },
                                "id": 456,
                                "indexExpression": {
                                  "id": 455,
                                  "name": "s",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 421,
                                  "src": "6904:1:5",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "6889:17:5",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Stake_$142_memory_ptr",
                                  "typeString": "struct Stackable.Stake memory"
                                }
                              },
                              "id": 457,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberLocation": "6907:6:5",
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 137,
                              "src": "6889:24:5",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "6870:43:5",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "6851:62:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 460,
                        "nodeType": "ExpressionStatement",
                        "src": "6851:62:5"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 424,
                      "name": "s",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 421,
                      "src": "6664:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 425,
                          "name": "summary",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 409,
                          "src": "6668:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_StakingSummary_$156_memory_ptr",
                            "typeString": "struct Stackable.StakingSummary memory"
                          }
                        },
                        "id": 426,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "6676:6:5",
                        "memberName": "stakes",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 155,
                        "src": "6668:14:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Stake_$142_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Stackable.Stake memory[] memory"
                        }
                      },
                      "id": 427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "6683:6:5",
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6668:21:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6664:25:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 462,
                  "initializationExpression": {
                    "assignments": [
                      421
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 421,
                        "mutability": "mutable",
                        "name": "s",
                        "nameLocation": "6657:1:5",
                        "nodeType": "VariableDeclaration",
                        "scope": 462,
                        "src": "6649:9:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 420,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6649:7:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 423,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 422,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6661:1:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6649:13:5"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 431,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftHandSide": {
                        "id": 429,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 421,
                        "src": "6691:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "Assignment",
                      "operator": "+=",
                      "rightHandSide": {
                        "hexValue": "31",
                        "id": 430,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6696:1:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "src": "6691:6:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 432,
                    "nodeType": "ExpressionStatement",
                    "src": "6691:6:5"
                  },
                  "nodeType": "ForStatement",
                  "src": "6644:280:5"
                },
                {
                  "expression": {
                    "id": 467,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 463,
                        "name": "summary",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 409,
                        "src": "6979:7:5",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_StakingSummary_$156_memory_ptr",
                          "typeString": "struct Stackable.StakingSummary memory"
                        }
                      },
                      "id": 465,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "6987:12:5",
                      "memberName": "total_amount",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 151,
                      "src": "6979:20:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 466,
                      "name": "totalStakeAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 405,
                      "src": "7002:16:5",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6979:39:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 468,
                  "nodeType": "ExpressionStatement",
                  "src": "6979:39:5"
                },
                {
                  "expression": {
                    "id": 469,
                    "name": "summary",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 409,
                    "src": "7035:7:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingSummary_$156_memory_ptr",
                      "typeString": "struct Stackable.StakingSummary memory"
                    }
                  },
                  "functionReturnParameters": 403,
                  "id": 470,
                  "nodeType": "Return",
                  "src": "7028:14:5"
                }
              ]
            },
            "documentation": {
              "id": 396,
              "nodeType": "StructuredDocumentation",
              "src": "6069:136:5",
              "text": " @notice\n hasStake is used to check if a account has stakes and the total amount along with all the seperate stakes"
            },
            "functionSelector": "e73e14bf",
            "id": 472,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hasStake",
            "nameLocation": "6219:8:5",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 398,
                  "mutability": "mutable",
                  "name": "_staker",
                  "nameLocation": "6236:7:5",
                  "nodeType": "VariableDeclaration",
                  "scope": 472,
                  "src": "6228:15:5",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 397,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6228:7:5",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6227:17:5"
            },
            "returnParameters": {
              "id": 403,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 402,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 472,
                  "src": "6266:21:5",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_StakingSummary_$156_memory_ptr",
                    "typeString": "struct Stackable.StakingSummary"
                  },
                  "typeName": {
                    "id": 401,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 400,
                      "name": "StakingSummary",
                      "nameLocations": [
                        "6266:14:5"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 156,
                      "src": "6266:14:5"
                    },
                    "referencedDeclaration": 156,
                    "src": "6266:14:5",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_StakingSummary_$156_storage_ptr",
                      "typeString": "struct Stackable.StakingSummary"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6265:23:5"
            },
            "scope": 473,
            "src": "6210:839:5",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "scope": 474,
        "src": "208:6843:5",
        "usedErrors": []
      }
    ],
    "src": "56:6995:5"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.18+commit.87f61d96.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0x8B40D8c26F6fE41fFF0bcEcc6f06F210619D08B2",
      "transactionHash": "0x43782c03fd4dd48558c8f712b8c99e6f56c617a395e10c5f6b64660a92f3f158"
    }
  },
  "schemaVersion": "3.4.11",
  "updatedAt": "2023-02-20T12:31:34.800Z",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "events": {
      "Staked(address,uint256,uint256,uint256)": {
        "notice": "Staked event is triggered whenever a user stakes tokens, address is indexed to make it filterable"
      }
    },
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Constructor,since this contract is not ment to be used without inheritance push once to stakeholders for it to work proplerly"
      },
      "hasStake(address)": {
        "notice": "hasStake is used to check if a account has stakes and the total amount along with all the seperate stakes"
      }
    },
    "notice": "Stakeable is a contract who is ment to be inherited by other contract that wants Staking capabilities",
    "version": 1
  }
}